// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: job-distributor/v1/node/node.proto

package node

import (
	ptypes "github.com/smartcontractkit/chainlink-protos/job-distributor/v1/shared/ptypes"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ChainType int32

const (
	ChainType_CHAIN_TYPE_UNSPECIFIED ChainType = 0
	ChainType_CHAIN_TYPE_EVM         ChainType = 1
	ChainType_CHAIN_TYPE_SOLANA      ChainType = 2
	ChainType_CHAIN_TYPE_STARKNET    ChainType = 3
	ChainType_CHAIN_TYPE_APTOS       ChainType = 4
	ChainType_CHAIN_TYPE_TRON        ChainType = 5
)

// Enum value maps for ChainType.
var (
	ChainType_name = map[int32]string{
		0: "CHAIN_TYPE_UNSPECIFIED",
		1: "CHAIN_TYPE_EVM",
		2: "CHAIN_TYPE_SOLANA",
		3: "CHAIN_TYPE_STARKNET",
		4: "CHAIN_TYPE_APTOS",
		5: "CHAIN_TYPE_TRON",
	}
	ChainType_value = map[string]int32{
		"CHAIN_TYPE_UNSPECIFIED": 0,
		"CHAIN_TYPE_EVM":         1,
		"CHAIN_TYPE_SOLANA":      2,
		"CHAIN_TYPE_STARKNET":    3,
		"CHAIN_TYPE_APTOS":       4,
		"CHAIN_TYPE_TRON":        5,
	}
)

func (x ChainType) Enum() *ChainType {
	p := new(ChainType)
	*p = x
	return p
}

func (x ChainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainType) Descriptor() protoreflect.EnumDescriptor {
	return file_job_distributor_v1_node_node_proto_enumTypes[0].Descriptor()
}

func (ChainType) Type() protoreflect.EnumType {
	return &file_job_distributor_v1_node_node_proto_enumTypes[0]
}

func (x ChainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainType.Descriptor instead.
func (ChainType) EnumDescriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{0}
}

// EnableState represents the enabled state of the node.
type EnableState int32

const (
	EnableState_ENABLE_STATE_UNSPECIFIED EnableState = 0
	EnableState_ENABLE_STATE_ENABLED     EnableState = 1
	EnableState_ENABLE_STATE_DISABLED    EnableState = 2
)

// Enum value maps for EnableState.
var (
	EnableState_name = map[int32]string{
		0: "ENABLE_STATE_UNSPECIFIED",
		1: "ENABLE_STATE_ENABLED",
		2: "ENABLE_STATE_DISABLED",
	}
	EnableState_value = map[string]int32{
		"ENABLE_STATE_UNSPECIFIED": 0,
		"ENABLE_STATE_ENABLED":     1,
		"ENABLE_STATE_DISABLED":    2,
	}
)

func (x EnableState) Enum() *EnableState {
	p := new(EnableState)
	*p = x
	return p
}

func (x EnableState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnableState) Descriptor() protoreflect.EnumDescriptor {
	return file_job_distributor_v1_node_node_proto_enumTypes[1].Descriptor()
}

func (EnableState) Type() protoreflect.EnumType {
	return &file_job_distributor_v1_node_node_proto_enumTypes[1]
}

func (x EnableState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnableState.Descriptor instead.
func (EnableState) EnumDescriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{1}
}

// Node represents a node within the Job Distributor system.
type Node struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                               // Unique identifier for the node.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                           // Human-readable name for the node.
	PublicKey     string                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`                // Public key used for secure communications.
	IsEnabled     bool                   `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`               // Indicates if the node is currently enabled.
	IsConnected   bool                   `protobuf:"varint,5,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`         // Indicates if the node is currently connected to the network.
	Labels        []*ptypes.Label        `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`                                       // Set of labels associated with the node.
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                // Timestamp when the node was created.
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                // Timestamp when the node was last updated.
	WorkflowKey   *string                `protobuf:"bytes,9,opt,name=workflow_key,json=workflowKey,proto3,oneof" json:"workflow_key,omitempty"`    // Workflow Public key
	P2PKeyBundles []*P2PKeyBundle        `protobuf:"bytes,10,rep,name=p2p_key_bundles,json=p2pKeyBundles,proto3" json:"p2p_key_bundles,omitempty"` // List of P2P key bundles associated with the node.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{0}
}

func (x *Node) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Node) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Node) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Node) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *Node) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *Node) GetLabels() []*ptypes.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Node) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Node) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Node) GetWorkflowKey() string {
	if x != nil && x.WorkflowKey != nil {
		return *x.WorkflowKey
	}
	return ""
}

func (x *Node) GetP2PKeyBundles() []*P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundles
	}
	return nil
}

type Chain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ChainType              `protobuf:"varint,2,opt,name=type,proto3,enum=api.node.v1.ChainType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{1}
}

func (x *Chain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chain) GetType() ChainType {
	if x != nil {
		return x.Type
	}
	return ChainType_CHAIN_TYPE_UNSPECIFIED
}

// The config for Flux Monitor on a specific chain
type FluxMonitorConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FluxMonitorConfig) Reset() {
	*x = FluxMonitorConfig{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FluxMonitorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FluxMonitorConfig) ProtoMessage() {}

func (x *FluxMonitorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FluxMonitorConfig.ProtoReflect.Descriptor instead.
func (*FluxMonitorConfig) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{2}
}

func (x *FluxMonitorConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// The config for OCR1 on a specific chain
type OCR1Config struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Enabled       bool                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsBootstrap   bool                     `protobuf:"varint,2,opt,name=is_bootstrap,json=isBootstrap,proto3" json:"is_bootstrap,omitempty"`
	P2PKeyBundle  *OCR1Config_P2PKeyBundle `protobuf:"bytes,3,opt,name=p2p_key_bundle,json=p2pKeyBundle,proto3" json:"p2p_key_bundle,omitempty"`
	OcrKeyBundle  *OCR1Config_OCRKeyBundle `protobuf:"bytes,4,opt,name=ocr_key_bundle,json=ocrKeyBundle,proto3" json:"ocr_key_bundle,omitempty"`
	Multiaddr     string                   `protobuf:"bytes,5,opt,name=multiaddr,proto3" json:"multiaddr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR1Config) Reset() {
	*x = OCR1Config{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config) ProtoMessage() {}

func (x *OCR1Config) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config.ProtoReflect.Descriptor instead.
func (*OCR1Config) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{3}
}

func (x *OCR1Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OCR1Config) GetIsBootstrap() bool {
	if x != nil {
		return x.IsBootstrap
	}
	return false
}

func (x *OCR1Config) GetP2PKeyBundle() *OCR1Config_P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundle
	}
	return nil
}

func (x *OCR1Config) GetOcrKeyBundle() *OCR1Config_OCRKeyBundle {
	if x != nil {
		return x.OcrKeyBundle
	}
	return nil
}

func (x *OCR1Config) GetMultiaddr() string {
	if x != nil {
		return x.Multiaddr
	}
	return ""
}

// The config for OCR2 on a specific chain
type OCR2Config struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Enabled          bool                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsBootstrap      bool                     `protobuf:"varint,2,opt,name=is_bootstrap,json=isBootstrap,proto3" json:"is_bootstrap,omitempty"`
	P2PKeyBundle     *OCR2Config_P2PKeyBundle `protobuf:"bytes,3,opt,name=p2p_key_bundle,json=p2pKeyBundle,proto3" json:"p2p_key_bundle,omitempty"`
	OcrKeyBundle     *OCR2Config_OCRKeyBundle `protobuf:"bytes,4,opt,name=ocr_key_bundle,json=ocrKeyBundle,proto3" json:"ocr_key_bundle,omitempty"`
	Multiaddr        string                   `protobuf:"bytes,5,opt,name=multiaddr,proto3" json:"multiaddr,omitempty"`
	Plugins          *OCR2Config_Plugins      `protobuf:"bytes,6,opt,name=plugins,proto3" json:"plugins,omitempty"`
	ForwarderAddress *string                  `protobuf:"bytes,7,opt,name=forwarder_address,json=forwarderAddress,proto3,oneof" json:"forwarder_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OCR2Config) Reset() {
	*x = OCR2Config{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config) ProtoMessage() {}

func (x *OCR2Config) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config.ProtoReflect.Descriptor instead.
func (*OCR2Config) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{4}
}

func (x *OCR2Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OCR2Config) GetIsBootstrap() bool {
	if x != nil {
		return x.IsBootstrap
	}
	return false
}

func (x *OCR2Config) GetP2PKeyBundle() *OCR2Config_P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundle
	}
	return nil
}

func (x *OCR2Config) GetOcrKeyBundle() *OCR2Config_OCRKeyBundle {
	if x != nil {
		return x.OcrKeyBundle
	}
	return nil
}

func (x *OCR2Config) GetMultiaddr() string {
	if x != nil {
		return x.Multiaddr
	}
	return ""
}

func (x *OCR2Config) GetPlugins() *OCR2Config_Plugins {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *OCR2Config) GetForwarderAddress() string {
	if x != nil && x.ForwarderAddress != nil {
		return *x.ForwarderAddress
	}
	return ""
}

type ChainConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Chain             *Chain                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	AccountAddress    string                 `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	AdminAddress      string                 `protobuf:"bytes,3,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
	FluxMonitorConfig *FluxMonitorConfig     `protobuf:"bytes,4,opt,name=flux_monitor_config,json=fluxMonitorConfig,proto3" json:"flux_monitor_config,omitempty"`
	Ocr1Config        *OCR1Config            `protobuf:"bytes,5,opt,name=ocr1_config,json=ocr1Config,proto3" json:"ocr1_config,omitempty"`
	Ocr2Config        *OCR2Config            `protobuf:"bytes,6,opt,name=ocr2_config,json=ocr2Config,proto3" json:"ocr2_config,omitempty"`
	// For EVM chains, we do not need this value and it is kept in the node's
	// keystore. For starknet, because the wallet address needs to be deployed
	// using this value and this pub key needs to be passed into the starknet
	// relayer, we request the node to send this directly to CLO.
	AccountAddressPublicKey *string `protobuf:"bytes,7,opt,name=account_address_public_key,json=accountAddressPublicKey,proto3,oneof" json:"account_address_public_key,omitempty"`
	NodeId                  string  `protobuf:"bytes,8,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{5}
}

func (x *ChainConfig) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *ChainConfig) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *ChainConfig) GetAdminAddress() string {
	if x != nil {
		return x.AdminAddress
	}
	return ""
}

func (x *ChainConfig) GetFluxMonitorConfig() *FluxMonitorConfig {
	if x != nil {
		return x.FluxMonitorConfig
	}
	return nil
}

func (x *ChainConfig) GetOcr1Config() *OCR1Config {
	if x != nil {
		return x.Ocr1Config
	}
	return nil
}

func (x *ChainConfig) GetOcr2Config() *OCR2Config {
	if x != nil {
		return x.Ocr2Config
	}
	return nil
}

func (x *ChainConfig) GetAccountAddressPublicKey() string {
	if x != nil && x.AccountAddressPublicKey != nil {
		return *x.AccountAddressPublicKey
	}
	return ""
}

func (x *ChainConfig) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// RegisterNodeRequest contains the information needed to register a new node.
type RegisterNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                            // Desired name for the node.
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // Public key for the node.
	Labels        []*ptypes.Label        `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`                        // Labels to associate with the node.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{6}
}

func (x *RegisterNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterNodeRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *RegisterNodeRequest) GetLabels() []*ptypes.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

// RegisterNodeResponse returns the newly registered node.
type RegisterNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Details of the newly registered node.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{7}
}

func (x *RegisterNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// GetNodeRequest is the request to retrieve a single node by either its ID or public key (but not both).
type GetNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                      // Unique identifier of the node to retrieve.
	PublicKey     *string                `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3,oneof" json:"public_key,omitempty"` // Public Key of the node to retrieve.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{8}
}

func (x *GetNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetNodeRequest) GetPublicKey() string {
	if x != nil && x.PublicKey != nil {
		return *x.PublicKey
	}
	return ""
}

// GetNodeResponse is the response containing the requested node.
type GetNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Details of the retrieved node.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{9}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// *
// ListNodesRequest is the request object for the ListNodes method.
//
// Provide a filter to return a subset of data. Nodes can be filtered by:
//   - ids - A list of node ids.
//   - archived - The archived state of the node.
//   - selectors - A list of selectors to filter nodes by their labels.
//   - public_keys - A list of node public keys.
//
// If no filter is provided, all nodes are returned.
type ListNodesRequest struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Filter        *ListNodesRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{10}
}

func (x *ListNodesRequest) GetFilter() *ListNodesRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

// *
// ListNodesResponse is the response object for the ListNodes method.
//
// It returns a list of nodes that match the filter criteria.
type ListNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"` // List of nodes.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{11}
}

func (x *ListNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// UpdateNodeRequest contains the information necessary to update a node.
type UpdateNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                // Unique identifier of the node to update.
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                            // New name for the node, if changing.
	PublicKey     string                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"` // New public key for the node, if changing.
	Labels        []*ptypes.Label        `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty"`                        // New set of labels for the node, if changing.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateNodeRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateNodeRequest) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *UpdateNodeRequest) GetLabels() []*ptypes.Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

// UpdateNodeResponse returns the updated node.
type UpdateNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Updated node details.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateNodeResponse) Reset() {
	*x = UpdateNodeResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResponse) ProtoMessage() {}

func (x *UpdateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// DisableNodeRequest is used to mark a node as disabled.
type DisableNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier of the node to disable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableNodeRequest) Reset() {
	*x = DisableNodeRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNodeRequest) ProtoMessage() {}

func (x *DisableNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNodeRequest.ProtoReflect.Descriptor instead.
func (*DisableNodeRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{14}
}

func (x *DisableNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DisableNodeResponse returns the disabled node.
type DisableNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Disabled node details.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DisableNodeResponse) Reset() {
	*x = DisableNodeResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DisableNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableNodeResponse) ProtoMessage() {}

func (x *DisableNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableNodeResponse.ProtoReflect.Descriptor instead.
func (*DisableNodeResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{15}
}

func (x *DisableNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// EnableNodeRequest is used to reactivate a disabled node.
type EnableNodeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Unique identifier of the node to enable.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableNodeRequest) Reset() {
	*x = EnableNodeRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNodeRequest) ProtoMessage() {}

func (x *EnableNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNodeRequest.ProtoReflect.Descriptor instead.
func (*EnableNodeRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{16}
}

func (x *EnableNodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// EnableNodeResponse returns the enabled node.
type EnableNodeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Node          *Node                  `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"` // Enabled node details.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnableNodeResponse) Reset() {
	*x = EnableNodeResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnableNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableNodeResponse) ProtoMessage() {}

func (x *EnableNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableNodeResponse.ProtoReflect.Descriptor instead.
func (*EnableNodeResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{17}
}

func (x *EnableNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

type ListNodeChainConfigsRequest struct {
	state         protoimpl.MessageState              `protogen:"open.v1"`
	Filter        *ListNodeChainConfigsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeChainConfigsRequest) Reset() {
	*x = ListNodeChainConfigsRequest{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeChainConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeChainConfigsRequest) ProtoMessage() {}

func (x *ListNodeChainConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeChainConfigsRequest.ProtoReflect.Descriptor instead.
func (*ListNodeChainConfigsRequest) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{18}
}

func (x *ListNodeChainConfigsRequest) GetFilter() *ListNodeChainConfigsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListNodeChainConfigsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainConfigs  []*ChainConfig         `protobuf:"bytes,1,rep,name=chain_configs,json=chainConfigs,proto3" json:"chain_configs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeChainConfigsResponse) Reset() {
	*x = ListNodeChainConfigsResponse{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeChainConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeChainConfigsResponse) ProtoMessage() {}

func (x *ListNodeChainConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeChainConfigsResponse.ProtoReflect.Descriptor instead.
func (*ListNodeChainConfigsResponse) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{19}
}

func (x *ListNodeChainConfigsResponse) GetChainConfigs() []*ChainConfig {
	if x != nil {
		return x.ChainConfigs
	}
	return nil
}

type P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P2PKeyBundle) Reset() {
	*x = P2PKeyBundle{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PKeyBundle) ProtoMessage() {}

func (x *P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{20}
}

func (x *P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type OCR1Config_P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR1Config_P2PKeyBundle) Reset() {
	*x = OCR1Config_P2PKeyBundle{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config_P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config_P2PKeyBundle) ProtoMessage() {}

func (x *OCR1Config_P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config_P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR1Config_P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{3, 0}
}

func (x *OCR1Config_P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *OCR1Config_P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type OCR1Config_OCRKeyBundle struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BundleId              string                 `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	ConfigPublicKey       string                 `protobuf:"bytes,2,opt,name=config_public_key,json=configPublicKey,proto3" json:"config_public_key,omitempty"`
	OffchainPublicKey     string                 `protobuf:"bytes,3,opt,name=offchain_public_key,json=offchainPublicKey,proto3" json:"offchain_public_key,omitempty"`
	OnchainSigningAddress string                 `protobuf:"bytes,4,opt,name=onchain_signing_address,json=onchainSigningAddress,proto3" json:"onchain_signing_address,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OCR1Config_OCRKeyBundle) Reset() {
	*x = OCR1Config_OCRKeyBundle{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config_OCRKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config_OCRKeyBundle) ProtoMessage() {}

func (x *OCR1Config_OCRKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config_OCRKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR1Config_OCRKeyBundle) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{3, 1}
}

func (x *OCR1Config_OCRKeyBundle) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetConfigPublicKey() string {
	if x != nil {
		return x.ConfigPublicKey
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetOffchainPublicKey() string {
	if x != nil {
		return x.OffchainPublicKey
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetOnchainSigningAddress() string {
	if x != nil {
		return x.OnchainSigningAddress
	}
	return ""
}

type OCR2Config_P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR2Config_P2PKeyBundle) Reset() {
	*x = OCR2Config_P2PKeyBundle{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_P2PKeyBundle) ProtoMessage() {}

func (x *OCR2Config_P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR2Config_P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{4, 0}
}

func (x *OCR2Config_P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *OCR2Config_P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type OCR2Config_OCRKeyBundle struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BundleId              string                 `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	ConfigPublicKey       string                 `protobuf:"bytes,2,opt,name=config_public_key,json=configPublicKey,proto3" json:"config_public_key,omitempty"`
	OffchainPublicKey     string                 `protobuf:"bytes,3,opt,name=offchain_public_key,json=offchainPublicKey,proto3" json:"offchain_public_key,omitempty"`
	OnchainSigningAddress string                 `protobuf:"bytes,4,opt,name=onchain_signing_address,json=onchainSigningAddress,proto3" json:"onchain_signing_address,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OCR2Config_OCRKeyBundle) Reset() {
	*x = OCR2Config_OCRKeyBundle{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_OCRKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_OCRKeyBundle) ProtoMessage() {}

func (x *OCR2Config_OCRKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_OCRKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR2Config_OCRKeyBundle) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{4, 1}
}

func (x *OCR2Config_OCRKeyBundle) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetConfigPublicKey() string {
	if x != nil {
		return x.ConfigPublicKey
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetOffchainPublicKey() string {
	if x != nil {
		return x.OffchainPublicKey
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetOnchainSigningAddress() string {
	if x != nil {
		return x.OnchainSigningAddress
	}
	return ""
}

type OCR2Config_Plugins struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commit        bool                   `protobuf:"varint,1,opt,name=commit,proto3" json:"commit,omitempty"`
	Execute       bool                   `protobuf:"varint,2,opt,name=execute,proto3" json:"execute,omitempty"`
	Median        bool                   `protobuf:"varint,3,opt,name=median,proto3" json:"median,omitempty"`
	Mercury       bool                   `protobuf:"varint,4,opt,name=mercury,proto3" json:"mercury,omitempty"`
	Rebalancer    bool                   `protobuf:"varint,5,opt,name=rebalancer,proto3" json:"rebalancer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR2Config_Plugins) Reset() {
	*x = OCR2Config_Plugins{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_Plugins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_Plugins) ProtoMessage() {}

func (x *OCR2Config_Plugins) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_Plugins.ProtoReflect.Descriptor instead.
func (*OCR2Config_Plugins) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{4, 2}
}

func (x *OCR2Config_Plugins) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

func (x *OCR2Config_Plugins) GetExecute() bool {
	if x != nil {
		return x.Execute
	}
	return false
}

func (x *OCR2Config_Plugins) GetMedian() bool {
	if x != nil {
		return x.Median
	}
	return false
}

func (x *OCR2Config_Plugins) GetMercury() bool {
	if x != nil {
		return x.Mercury
	}
	return false
}

func (x *OCR2Config_Plugins) GetRebalancer() bool {
	if x != nil {
		return x.Rebalancer
	}
	return false
}

type ListNodesRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	Enabled       EnableState            `protobuf:"varint,2,opt,name=enabled,proto3,enum=api.node.v1.EnableState" json:"enabled,omitempty"`
	Selectors     []*ptypes.Selector     `protobuf:"bytes,3,rep,name=selectors,proto3" json:"selectors,omitempty"`
	PublicKeys    []string               `protobuf:"bytes,4,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodesRequest_Filter) Reset() {
	*x = ListNodesRequest_Filter{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodesRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest_Filter) ProtoMessage() {}

func (x *ListNodesRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListNodesRequest_Filter) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{10, 0}
}

func (x *ListNodesRequest_Filter) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ListNodesRequest_Filter) GetEnabled() EnableState {
	if x != nil {
		return x.Enabled
	}
	return EnableState_ENABLE_STATE_UNSPECIFIED
}

func (x *ListNodesRequest_Filter) GetSelectors() []*ptypes.Selector {
	if x != nil {
		return x.Selectors
	}
	return nil
}

func (x *ListNodesRequest_Filter) GetPublicKeys() []string {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

type ListNodeChainConfigsRequest_Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeIds       []string               `protobuf:"bytes,1,rep,name=node_ids,json=nodeIds,proto3" json:"node_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNodeChainConfigsRequest_Filter) Reset() {
	*x = ListNodeChainConfigsRequest_Filter{}
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNodeChainConfigsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodeChainConfigsRequest_Filter) ProtoMessage() {}

func (x *ListNodeChainConfigsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_job_distributor_v1_node_node_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodeChainConfigsRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListNodeChainConfigsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_job_distributor_v1_node_node_proto_rawDescGZIP(), []int{18, 0}
}

func (x *ListNodeChainConfigsRequest_Filter) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

var File_job_distributor_v1_node_node_proto protoreflect.FileDescriptor

const file_job_distributor_v1_node_node_proto_rawDesc = "" +
	"\n" +
	"\"job-distributor/v1/node/node.proto\x12\vapi.node.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a,job-distributor/v1/shared/ptypes/label.proto\"\xa7\x03\n" +
	"\x04Node\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKey\x12\x1d\n" +
	"\n" +
	"is_enabled\x18\x04 \x01(\bR\tisEnabled\x12!\n" +
	"\fis_connected\x18\x05 \x01(\bR\visConnected\x12(\n" +
	"\x06labels\x18\x06 \x03(\v2\x10.api.label.LabelR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12&\n" +
	"\fworkflow_key\x18\t \x01(\tH\x00R\vworkflowKey\x88\x01\x01\x12A\n" +
	"\x0fp2p_key_bundles\x18\n" +
	" \x03(\v2\x19.api.node.v1.P2PKeyBundleR\rp2pKeyBundlesB\x0f\n" +
	"\r_workflow_key\"C\n" +
	"\x05Chain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x04type\x18\x02 \x01(\x0e2\x16.api.node.v1.ChainTypeR\x04type\"-\n" +
	"\x11FluxMonitorConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\x89\x04\n" +
	"\n" +
	"OCR1Config\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12!\n" +
	"\fis_bootstrap\x18\x02 \x01(\bR\visBootstrap\x12J\n" +
	"\x0ep2p_key_bundle\x18\x03 \x01(\v2$.api.node.v1.OCR1Config.P2PKeyBundleR\fp2pKeyBundle\x12J\n" +
	"\x0eocr_key_bundle\x18\x04 \x01(\v2$.api.node.v1.OCR1Config.OCRKeyBundleR\focrKeyBundle\x12\x1c\n" +
	"\tmultiaddr\x18\x05 \x01(\tR\tmultiaddr\x1aF\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x1a\xbf\x01\n" +
	"\fOCRKeyBundle\x12\x1b\n" +
	"\tbundle_id\x18\x01 \x01(\tR\bbundleId\x12*\n" +
	"\x11config_public_key\x18\x02 \x01(\tR\x0fconfigPublicKey\x12.\n" +
	"\x13offchain_public_key\x18\x03 \x01(\tR\x11offchainPublicKey\x126\n" +
	"\x17onchain_signing_address\x18\x04 \x01(\tR\x15onchainSigningAddress\"\x9c\x06\n" +
	"\n" +
	"OCR2Config\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12!\n" +
	"\fis_bootstrap\x18\x02 \x01(\bR\visBootstrap\x12J\n" +
	"\x0ep2p_key_bundle\x18\x03 \x01(\v2$.api.node.v1.OCR2Config.P2PKeyBundleR\fp2pKeyBundle\x12J\n" +
	"\x0eocr_key_bundle\x18\x04 \x01(\v2$.api.node.v1.OCR2Config.OCRKeyBundleR\focrKeyBundle\x12\x1c\n" +
	"\tmultiaddr\x18\x05 \x01(\tR\tmultiaddr\x129\n" +
	"\aplugins\x18\x06 \x01(\v2\x1f.api.node.v1.OCR2Config.PluginsR\aplugins\x120\n" +
	"\x11forwarder_address\x18\a \x01(\tH\x00R\x10forwarderAddress\x88\x01\x01\x1aF\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x1a\xbf\x01\n" +
	"\fOCRKeyBundle\x12\x1b\n" +
	"\tbundle_id\x18\x01 \x01(\tR\bbundleId\x12*\n" +
	"\x11config_public_key\x18\x02 \x01(\tR\x0fconfigPublicKey\x12.\n" +
	"\x13offchain_public_key\x18\x03 \x01(\tR\x11offchainPublicKey\x126\n" +
	"\x17onchain_signing_address\x18\x04 \x01(\tR\x15onchainSigningAddress\x1a\x8d\x01\n" +
	"\aPlugins\x12\x16\n" +
	"\x06commit\x18\x01 \x01(\bR\x06commit\x12\x18\n" +
	"\aexecute\x18\x02 \x01(\bR\aexecute\x12\x16\n" +
	"\x06median\x18\x03 \x01(\bR\x06median\x12\x18\n" +
	"\amercury\x18\x04 \x01(\bR\amercury\x12\x1e\n" +
	"\n" +
	"rebalancer\x18\x05 \x01(\bR\n" +
	"rebalancerB\x14\n" +
	"\x12_forwarder_address\"\xc3\x03\n" +
	"\vChainConfig\x12(\n" +
	"\x05chain\x18\x01 \x01(\v2\x12.api.node.v1.ChainR\x05chain\x12'\n" +
	"\x0faccount_address\x18\x02 \x01(\tR\x0eaccountAddress\x12#\n" +
	"\radmin_address\x18\x03 \x01(\tR\fadminAddress\x12N\n" +
	"\x13flux_monitor_config\x18\x04 \x01(\v2\x1e.api.node.v1.FluxMonitorConfigR\x11fluxMonitorConfig\x128\n" +
	"\vocr1_config\x18\x05 \x01(\v2\x17.api.node.v1.OCR1ConfigR\n" +
	"ocr1Config\x128\n" +
	"\vocr2_config\x18\x06 \x01(\v2\x17.api.node.v1.OCR2ConfigR\n" +
	"ocr2Config\x12@\n" +
	"\x1aaccount_address_public_key\x18\a \x01(\tH\x00R\x17accountAddressPublicKey\x88\x01\x01\x12\x17\n" +
	"\anode_id\x18\b \x01(\tR\x06nodeIdB\x1d\n" +
	"\x1b_account_address_public_key\"r\n" +
	"\x13RegisterNodeRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x12(\n" +
	"\x06labels\x18\x03 \x03(\v2\x10.api.label.LabelR\x06labels\"=\n" +
	"\x14RegisterNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.api.node.v1.NodeR\x04node\"S\n" +
	"\x0eGetNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tH\x00R\tpublicKey\x88\x01\x01B\r\n" +
	"\v_public_key\"8\n" +
	"\x0fGetNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.api.node.v1.NodeR\x04node\"\xf5\x01\n" +
	"\x10ListNodesRequest\x12<\n" +
	"\x06filter\x18\x01 \x01(\v2$.api.node.v1.ListNodesRequest.FilterR\x06filter\x1a\xa2\x01\n" +
	"\x06Filter\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\x122\n" +
	"\aenabled\x18\x02 \x01(\x0e2\x18.api.node.v1.EnableStateR\aenabled\x121\n" +
	"\tselectors\x18\x03 \x03(\v2\x13.api.label.SelectorR\tselectors\x12\x1f\n" +
	"\vpublic_keys\x18\x04 \x03(\tR\n" +
	"publicKeys\"<\n" +
	"\x11ListNodesResponse\x12'\n" +
	"\x05nodes\x18\x01 \x03(\v2\x11.api.node.v1.NodeR\x05nodes\"\x80\x01\n" +
	"\x11UpdateNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\tR\tpublicKey\x12(\n" +
	"\x06labels\x18\x04 \x03(\v2\x10.api.label.LabelR\x06labels\";\n" +
	"\x12UpdateNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.api.node.v1.NodeR\x04node\"$\n" +
	"\x12DisableNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"<\n" +
	"\x13DisableNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.api.node.v1.NodeR\x04node\"#\n" +
	"\x11EnableNodeRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\";\n" +
	"\x12EnableNodeResponse\x12%\n" +
	"\x04node\x18\x01 \x01(\v2\x11.api.node.v1.NodeR\x04node\"\x8b\x01\n" +
	"\x1bListNodeChainConfigsRequest\x12G\n" +
	"\x06filter\x18\x01 \x01(\v2/.api.node.v1.ListNodeChainConfigsRequest.FilterR\x06filter\x1a#\n" +
	"\x06Filter\x12\x19\n" +
	"\bnode_ids\x18\x01 \x03(\tR\anodeIds\"]\n" +
	"\x1cListNodeChainConfigsResponse\x12=\n" +
	"\rchain_configs\x18\x01 \x03(\v2\x18.api.node.v1.ChainConfigR\fchainConfigs\"F\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey*\x96\x01\n" +
	"\tChainType\x12\x1a\n" +
	"\x16CHAIN_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eCHAIN_TYPE_EVM\x10\x01\x12\x15\n" +
	"\x11CHAIN_TYPE_SOLANA\x10\x02\x12\x17\n" +
	"\x13CHAIN_TYPE_STARKNET\x10\x03\x12\x14\n" +
	"\x10CHAIN_TYPE_APTOS\x10\x04\x12\x13\n" +
	"\x0fCHAIN_TYPE_TRON\x10\x05*`\n" +
	"\vEnableState\x12\x1c\n" +
	"\x18ENABLE_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14ENABLE_STATE_ENABLED\x10\x01\x12\x19\n" +
	"\x15ENABLE_STATE_DISABLED\x10\x022\xdf\x04\n" +
	"\vNodeService\x12R\n" +
	"\vDisableNode\x12\x1f.api.node.v1.DisableNodeRequest\x1a .api.node.v1.DisableNodeResponse\"\x00\x12O\n" +
	"\n" +
	"EnableNode\x12\x1e.api.node.v1.EnableNodeRequest\x1a\x1f.api.node.v1.EnableNodeResponse\"\x00\x12F\n" +
	"\aGetNode\x12\x1b.api.node.v1.GetNodeRequest\x1a\x1c.api.node.v1.GetNodeResponse\"\x00\x12L\n" +
	"\tListNodes\x12\x1d.api.node.v1.ListNodesRequest\x1a\x1e.api.node.v1.ListNodesResponse\"\x00\x12m\n" +
	"\x14ListNodeChainConfigs\x12(.api.node.v1.ListNodeChainConfigsRequest\x1a).api.node.v1.ListNodeChainConfigsResponse\"\x00\x12U\n" +
	"\fRegisterNode\x12 .api.node.v1.RegisterNodeRequest\x1a!.api.node.v1.RegisterNodeResponse\"\x00\x12O\n" +
	"\n" +
	"UpdateNode\x12\x1e.api.node.v1.UpdateNodeRequest\x1a\x1f.api.node.v1.UpdateNodeResponse\"\x00BFZDgithub.com/smartcontractkit/chainlink-protos/job-distributor/v1/nodeb\x06proto3"

var (
	file_job_distributor_v1_node_node_proto_rawDescOnce sync.Once
	file_job_distributor_v1_node_node_proto_rawDescData []byte
)

func file_job_distributor_v1_node_node_proto_rawDescGZIP() []byte {
	file_job_distributor_v1_node_node_proto_rawDescOnce.Do(func() {
		file_job_distributor_v1_node_node_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_job_distributor_v1_node_node_proto_rawDesc), len(file_job_distributor_v1_node_node_proto_rawDesc)))
	})
	return file_job_distributor_v1_node_node_proto_rawDescData
}

var file_job_distributor_v1_node_node_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_job_distributor_v1_node_node_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_job_distributor_v1_node_node_proto_goTypes = []any{
	(ChainType)(0),                             // 0: api.node.v1.ChainType
	(EnableState)(0),                           // 1: api.node.v1.EnableState
	(*Node)(nil),                               // 2: api.node.v1.Node
	(*Chain)(nil),                              // 3: api.node.v1.Chain
	(*FluxMonitorConfig)(nil),                  // 4: api.node.v1.FluxMonitorConfig
	(*OCR1Config)(nil),                         // 5: api.node.v1.OCR1Config
	(*OCR2Config)(nil),                         // 6: api.node.v1.OCR2Config
	(*ChainConfig)(nil),                        // 7: api.node.v1.ChainConfig
	(*RegisterNodeRequest)(nil),                // 8: api.node.v1.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),               // 9: api.node.v1.RegisterNodeResponse
	(*GetNodeRequest)(nil),                     // 10: api.node.v1.GetNodeRequest
	(*GetNodeResponse)(nil),                    // 11: api.node.v1.GetNodeResponse
	(*ListNodesRequest)(nil),                   // 12: api.node.v1.ListNodesRequest
	(*ListNodesResponse)(nil),                  // 13: api.node.v1.ListNodesResponse
	(*UpdateNodeRequest)(nil),                  // 14: api.node.v1.UpdateNodeRequest
	(*UpdateNodeResponse)(nil),                 // 15: api.node.v1.UpdateNodeResponse
	(*DisableNodeRequest)(nil),                 // 16: api.node.v1.DisableNodeRequest
	(*DisableNodeResponse)(nil),                // 17: api.node.v1.DisableNodeResponse
	(*EnableNodeRequest)(nil),                  // 18: api.node.v1.EnableNodeRequest
	(*EnableNodeResponse)(nil),                 // 19: api.node.v1.EnableNodeResponse
	(*ListNodeChainConfigsRequest)(nil),        // 20: api.node.v1.ListNodeChainConfigsRequest
	(*ListNodeChainConfigsResponse)(nil),       // 21: api.node.v1.ListNodeChainConfigsResponse
	(*P2PKeyBundle)(nil),                       // 22: api.node.v1.P2PKeyBundle
	(*OCR1Config_P2PKeyBundle)(nil),            // 23: api.node.v1.OCR1Config.P2PKeyBundle
	(*OCR1Config_OCRKeyBundle)(nil),            // 24: api.node.v1.OCR1Config.OCRKeyBundle
	(*OCR2Config_P2PKeyBundle)(nil),            // 25: api.node.v1.OCR2Config.P2PKeyBundle
	(*OCR2Config_OCRKeyBundle)(nil),            // 26: api.node.v1.OCR2Config.OCRKeyBundle
	(*OCR2Config_Plugins)(nil),                 // 27: api.node.v1.OCR2Config.Plugins
	(*ListNodesRequest_Filter)(nil),            // 28: api.node.v1.ListNodesRequest.Filter
	(*ListNodeChainConfigsRequest_Filter)(nil), // 29: api.node.v1.ListNodeChainConfigsRequest.Filter
	(*ptypes.Label)(nil),                       // 30: api.label.Label
	(*timestamppb.Timestamp)(nil),              // 31: google.protobuf.Timestamp
	(*ptypes.Selector)(nil),                    // 32: api.label.Selector
}
var file_job_distributor_v1_node_node_proto_depIdxs = []int32{
	30, // 0: api.node.v1.Node.labels:type_name -> api.label.Label
	31, // 1: api.node.v1.Node.created_at:type_name -> google.protobuf.Timestamp
	31, // 2: api.node.v1.Node.updated_at:type_name -> google.protobuf.Timestamp
	22, // 3: api.node.v1.Node.p2p_key_bundles:type_name -> api.node.v1.P2PKeyBundle
	0,  // 4: api.node.v1.Chain.type:type_name -> api.node.v1.ChainType
	23, // 5: api.node.v1.OCR1Config.p2p_key_bundle:type_name -> api.node.v1.OCR1Config.P2PKeyBundle
	24, // 6: api.node.v1.OCR1Config.ocr_key_bundle:type_name -> api.node.v1.OCR1Config.OCRKeyBundle
	25, // 7: api.node.v1.OCR2Config.p2p_key_bundle:type_name -> api.node.v1.OCR2Config.P2PKeyBundle
	26, // 8: api.node.v1.OCR2Config.ocr_key_bundle:type_name -> api.node.v1.OCR2Config.OCRKeyBundle
	27, // 9: api.node.v1.OCR2Config.plugins:type_name -> api.node.v1.OCR2Config.Plugins
	3,  // 10: api.node.v1.ChainConfig.chain:type_name -> api.node.v1.Chain
	4,  // 11: api.node.v1.ChainConfig.flux_monitor_config:type_name -> api.node.v1.FluxMonitorConfig
	5,  // 12: api.node.v1.ChainConfig.ocr1_config:type_name -> api.node.v1.OCR1Config
	6,  // 13: api.node.v1.ChainConfig.ocr2_config:type_name -> api.node.v1.OCR2Config
	30, // 14: api.node.v1.RegisterNodeRequest.labels:type_name -> api.label.Label
	2,  // 15: api.node.v1.RegisterNodeResponse.node:type_name -> api.node.v1.Node
	2,  // 16: api.node.v1.GetNodeResponse.node:type_name -> api.node.v1.Node
	28, // 17: api.node.v1.ListNodesRequest.filter:type_name -> api.node.v1.ListNodesRequest.Filter
	2,  // 18: api.node.v1.ListNodesResponse.nodes:type_name -> api.node.v1.Node
	30, // 19: api.node.v1.UpdateNodeRequest.labels:type_name -> api.label.Label
	2,  // 20: api.node.v1.UpdateNodeResponse.node:type_name -> api.node.v1.Node
	2,  // 21: api.node.v1.DisableNodeResponse.node:type_name -> api.node.v1.Node
	2,  // 22: api.node.v1.EnableNodeResponse.node:type_name -> api.node.v1.Node
	29, // 23: api.node.v1.ListNodeChainConfigsRequest.filter:type_name -> api.node.v1.ListNodeChainConfigsRequest.Filter
	7,  // 24: api.node.v1.ListNodeChainConfigsResponse.chain_configs:type_name -> api.node.v1.ChainConfig
	1,  // 25: api.node.v1.ListNodesRequest.Filter.enabled:type_name -> api.node.v1.EnableState
	32, // 26: api.node.v1.ListNodesRequest.Filter.selectors:type_name -> api.label.Selector
	16, // 27: api.node.v1.NodeService.DisableNode:input_type -> api.node.v1.DisableNodeRequest
	18, // 28: api.node.v1.NodeService.EnableNode:input_type -> api.node.v1.EnableNodeRequest
	10, // 29: api.node.v1.NodeService.GetNode:input_type -> api.node.v1.GetNodeRequest
	12, // 30: api.node.v1.NodeService.ListNodes:input_type -> api.node.v1.ListNodesRequest
	20, // 31: api.node.v1.NodeService.ListNodeChainConfigs:input_type -> api.node.v1.ListNodeChainConfigsRequest
	8,  // 32: api.node.v1.NodeService.RegisterNode:input_type -> api.node.v1.RegisterNodeRequest
	14, // 33: api.node.v1.NodeService.UpdateNode:input_type -> api.node.v1.UpdateNodeRequest
	17, // 34: api.node.v1.NodeService.DisableNode:output_type -> api.node.v1.DisableNodeResponse
	19, // 35: api.node.v1.NodeService.EnableNode:output_type -> api.node.v1.EnableNodeResponse
	11, // 36: api.node.v1.NodeService.GetNode:output_type -> api.node.v1.GetNodeResponse
	13, // 37: api.node.v1.NodeService.ListNodes:output_type -> api.node.v1.ListNodesResponse
	21, // 38: api.node.v1.NodeService.ListNodeChainConfigs:output_type -> api.node.v1.ListNodeChainConfigsResponse
	9,  // 39: api.node.v1.NodeService.RegisterNode:output_type -> api.node.v1.RegisterNodeResponse
	15, // 40: api.node.v1.NodeService.UpdateNode:output_type -> api.node.v1.UpdateNodeResponse
	34, // [34:41] is the sub-list for method output_type
	27, // [27:34] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_job_distributor_v1_node_node_proto_init() }
func file_job_distributor_v1_node_node_proto_init() {
	if File_job_distributor_v1_node_node_proto != nil {
		return
	}
	file_job_distributor_v1_node_node_proto_msgTypes[0].OneofWrappers = []any{}
	file_job_distributor_v1_node_node_proto_msgTypes[4].OneofWrappers = []any{}
	file_job_distributor_v1_node_node_proto_msgTypes[5].OneofWrappers = []any{}
	file_job_distributor_v1_node_node_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_job_distributor_v1_node_node_proto_rawDesc), len(file_job_distributor_v1_node_node_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_job_distributor_v1_node_node_proto_goTypes,
		DependencyIndexes: file_job_distributor_v1_node_node_proto_depIdxs,
		EnumInfos:         file_job_distributor_v1_node_node_proto_enumTypes,
		MessageInfos:      file_job_distributor_v1_node_node_proto_msgTypes,
	}.Build()
	File_job_distributor_v1_node_node_proto = out.File
	file_job_distributor_v1_node_node_proto_goTypes = nil
	file_job_distributor_v1_node_node_proto_depIdxs = nil
}
