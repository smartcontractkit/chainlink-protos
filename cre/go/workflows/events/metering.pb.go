// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/workflows/metering.proto

package events

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MeteringReport is consumed by the engine in core to emit the final Metering Report.
type MeteringReport struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Steps         map[string]*MeteringReportStep `protobuf:"bytes,1,rep,name=steps,proto3" json:"steps,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Metadata      *WorkflowMetadata              `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MeteringReport) Reset() {
	*x = MeteringReport{}
	mi := &file_v1_workflows_metering_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MeteringReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MeteringReport) ProtoMessage() {}

func (x *MeteringReport) ProtoReflect() protoreflect.Message {
	mi := &file_v1_workflows_metering_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MeteringReport.ProtoReflect.Descriptor instead.
func (*MeteringReport) Descriptor() ([]byte, []int) {
	return file_v1_workflows_metering_proto_rawDescGZIP(), []int{0}
}

func (x *MeteringReport) GetSteps() map[string]*MeteringReportStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *MeteringReport) GetMetadata() *WorkflowMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

var File_v1_workflows_metering_proto protoreflect.FileDescriptor

const file_v1_workflows_metering_proto_rawDesc = "" +
	"\n" +
	"\x1bv1/workflows/metering.proto\x12\fworkflows.v1\x1a\x1bv1/workflows/metadata.proto\x1a v1/workflows/metering_step.proto\"\xe7\x01\n" +
	"\x0eMeteringReport\x12=\n" +
	"\x05steps\x18\x01 \x03(\v2'.workflows.v1.MeteringReport.StepsEntryR\x05steps\x12:\n" +
	"\bmetadata\x18\x02 \x01(\v2\x1e.workflows.v1.WorkflowMetadataR\bmetadata\x1aZ\n" +
	"\n" +
	"StepsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x126\n" +
	"\x05value\x18\x02 \x01(\v2 .workflows.v1.MeteringReportStepR\x05value:\x028\x01BFZDgithub.com/smartcontractkit/chainlink-protos/cre/go/workflows/eventsb\x06proto3"

var (
	file_v1_workflows_metering_proto_rawDescOnce sync.Once
	file_v1_workflows_metering_proto_rawDescData []byte
)

func file_v1_workflows_metering_proto_rawDescGZIP() []byte {
	file_v1_workflows_metering_proto_rawDescOnce.Do(func() {
		file_v1_workflows_metering_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_workflows_metering_proto_rawDesc), len(file_v1_workflows_metering_proto_rawDesc)))
	})
	return file_v1_workflows_metering_proto_rawDescData
}

var file_v1_workflows_metering_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_v1_workflows_metering_proto_goTypes = []any{
	(*MeteringReport)(nil),     // 0: workflows.v1.MeteringReport
	nil,                        // 1: workflows.v1.MeteringReport.StepsEntry
	(*WorkflowMetadata)(nil),   // 2: workflows.v1.WorkflowMetadata
	(*MeteringReportStep)(nil), // 3: workflows.v1.MeteringReportStep
}
var file_v1_workflows_metering_proto_depIdxs = []int32{
	1, // 0: workflows.v1.MeteringReport.steps:type_name -> workflows.v1.MeteringReport.StepsEntry
	2, // 1: workflows.v1.MeteringReport.metadata:type_name -> workflows.v1.WorkflowMetadata
	3, // 2: workflows.v1.MeteringReport.StepsEntry.value:type_name -> workflows.v1.MeteringReportStep
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_v1_workflows_metering_proto_init() }
func file_v1_workflows_metering_proto_init() {
	if File_v1_workflows_metering_proto != nil {
		return
	}
	file_v1_workflows_metadata_proto_init()
	file_v1_workflows_metering_step_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_workflows_metering_proto_rawDesc), len(file_v1_workflows_metering_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_workflows_metering_proto_goTypes,
		DependencyIndexes: file_v1_workflows_metering_proto_depIdxs,
		MessageInfos:      file_v1_workflows_metering_proto_msgTypes,
	}.Build()
	File_v1_workflows_metering_proto = out.File
	file_v1_workflows_metering_proto_goTypes = nil
	file_v1_workflows_metering_proto_depIdxs = nil
}
