// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: v1/linking-types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// the process that the user selected for linking the owner address
type LinkRequestProcess int32

const (
	LinkRequestProcess_LINK_REQUEST_PROCESS_UNSPECIFIED LinkRequestProcess = 0
	LinkRequestProcess_LINK_REQUEST_PROCESS_EOA         LinkRequestProcess = 1
	LinkRequestProcess_LINK_REQUEST_PROCESS_MSIG        LinkRequestProcess = 2
	LinkRequestProcess_LINK_REQUEST_PROCESS_UNKNOWN     LinkRequestProcess = 3
)

// Enum value maps for LinkRequestProcess.
var (
	LinkRequestProcess_name = map[int32]string{
		0: "LINK_REQUEST_PROCESS_UNSPECIFIED",
		1: "LINK_REQUEST_PROCESS_EOA",
		2: "LINK_REQUEST_PROCESS_MSIG",
		3: "LINK_REQUEST_PROCESS_UNKNOWN",
	}
	LinkRequestProcess_value = map[string]int32{
		"LINK_REQUEST_PROCESS_UNSPECIFIED": 0,
		"LINK_REQUEST_PROCESS_EOA":         1,
		"LINK_REQUEST_PROCESS_MSIG":        2,
		"LINK_REQUEST_PROCESS_UNKNOWN":     3,
	}
)

func (x LinkRequestProcess) Enum() *LinkRequestProcess {
	p := new(LinkRequestProcess)
	*p = x
	return p
}

func (x LinkRequestProcess) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LinkRequestProcess) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_linking_types_proto_enumTypes[0].Descriptor()
}

func (LinkRequestProcess) Type() protoreflect.EnumType {
	return &file_v1_linking_types_proto_enumTypes[0]
}

func (x LinkRequestProcess) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LinkRequestProcess.Descriptor instead.
func (LinkRequestProcess) EnumDescriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{0}
}

// used for filtering ListOwners result
type ListOwnersFilter int32

const (
	ListOwnersFilter_LIST_OWNERS_FILTER_UNSPECIFIED   ListOwnersFilter = 0
	ListOwnersFilter_LIST_OWNERS_FILTER_LINKED_ONLY   ListOwnersFilter = 1
	ListOwnersFilter_LIST_OWNERS_FILTER_UNLINKED_ONLY ListOwnersFilter = 2
	ListOwnersFilter_LIST_OWNERS_FILTER_NO_FILTER     ListOwnersFilter = 3
)

// Enum value maps for ListOwnersFilter.
var (
	ListOwnersFilter_name = map[int32]string{
		0: "LIST_OWNERS_FILTER_UNSPECIFIED",
		1: "LIST_OWNERS_FILTER_LINKED_ONLY",
		2: "LIST_OWNERS_FILTER_UNLINKED_ONLY",
		3: "LIST_OWNERS_FILTER_NO_FILTER",
	}
	ListOwnersFilter_value = map[string]int32{
		"LIST_OWNERS_FILTER_UNSPECIFIED":   0,
		"LIST_OWNERS_FILTER_LINKED_ONLY":   1,
		"LIST_OWNERS_FILTER_UNLINKED_ONLY": 2,
		"LIST_OWNERS_FILTER_NO_FILTER":     3,
	}
)

func (x ListOwnersFilter) Enum() *ListOwnersFilter {
	p := new(ListOwnersFilter)
	*p = x
	return p
}

func (x ListOwnersFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListOwnersFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_linking_types_proto_enumTypes[1].Descriptor()
}

func (ListOwnersFilter) Type() protoreflect.EnumType {
	return &file_v1_linking_types_proto_enumTypes[1]
}

func (x ListOwnersFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ListOwnersFilter.Descriptor instead.
func (ListOwnersFilter) EnumDescriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{1}
}

// environment indicates which Workflow Registry to use
type EnvironmentName int32

const (
	EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED        EnvironmentName = 0
	EnvironmentName_ENVIRONMENT_NAME_PRODUCTION_MAINNET EnvironmentName = 1
	EnvironmentName_ENVIRONMENT_NAME_PRODUCTION_TESTNET EnvironmentName = 2
)

// Enum value maps for EnvironmentName.
var (
	EnvironmentName_name = map[int32]string{
		0: "ENVIRONMENT_NAME_UNSPECIFIED",
		1: "ENVIRONMENT_NAME_PRODUCTION_MAINNET",
		2: "ENVIRONMENT_NAME_PRODUCTION_TESTNET",
	}
	EnvironmentName_value = map[string]int32{
		"ENVIRONMENT_NAME_UNSPECIFIED":        0,
		"ENVIRONMENT_NAME_PRODUCTION_MAINNET": 1,
		"ENVIRONMENT_NAME_PRODUCTION_TESTNET": 2,
	}
)

func (x EnvironmentName) Enum() *EnvironmentName {
	p := new(EnvironmentName)
	*p = x
	return p
}

func (x EnvironmentName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EnvironmentName) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_linking_types_proto_enumTypes[2].Descriptor()
}

func (EnvironmentName) Type() protoreflect.EnumType {
	return &file_v1_linking_types_proto_enumTypes[2]
}

func (x EnvironmentName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EnvironmentName.Descriptor instead.
func (EnvironmentName) EnumDescriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{2}
}

// after linking or unlinking request has been submitted, users will view pending requests on the UI side
// request will not be completed until it has been verified that the proof has been submitted to the Workflow Registry
type VerificationStatus int32

const (
	VerificationStatus_VERIFICATION_STATUS_UNSPECIFIED VerificationStatus = 0
	VerificationStatus_VERIFICATION_STATUS_PENDING     VerificationStatus = 1
	VerificationStatus_VERIFICATION_STATUS_SUCCESSFULL VerificationStatus = 2
	VerificationStatus_VERIFICATION_STATUS_EXPIRED     VerificationStatus = 3
	VerificationStatus_VERIFICATION_STATUS_FAILED      VerificationStatus = 4
)

// Enum value maps for VerificationStatus.
var (
	VerificationStatus_name = map[int32]string{
		0: "VERIFICATION_STATUS_UNSPECIFIED",
		1: "VERIFICATION_STATUS_PENDING",
		2: "VERIFICATION_STATUS_SUCCESSFULL",
		3: "VERIFICATION_STATUS_EXPIRED",
		4: "VERIFICATION_STATUS_FAILED",
	}
	VerificationStatus_value = map[string]int32{
		"VERIFICATION_STATUS_UNSPECIFIED": 0,
		"VERIFICATION_STATUS_PENDING":     1,
		"VERIFICATION_STATUS_SUCCESSFULL": 2,
		"VERIFICATION_STATUS_EXPIRED":     3,
		"VERIFICATION_STATUS_FAILED":      4,
	}
)

func (x VerificationStatus) Enum() *VerificationStatus {
	p := new(VerificationStatus)
	*p = x
	return p
}

func (x VerificationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VerificationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_linking_types_proto_enumTypes[3].Descriptor()
}

func (VerificationStatus) Type() protoreflect.EnumType {
	return &file_v1_linking_types_proto_enumTypes[3]
}

func (x VerificationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VerificationStatus.Descriptor instead.
func (VerificationStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{3}
}

// each unlinking request will have to specify which action to take prior to unlinking in case there
// any active workflows remaining on the Workflow Registry for that workflow owner
type PreUnlinkAction int32

const (
	PreUnlinkAction_PRE_UNLINK_ACTION_UNSPECIFIED      PreUnlinkAction = 0
	PreUnlinkAction_PRE_UNLINK_ACTION_NONE             PreUnlinkAction = 1
	PreUnlinkAction_PRE_UNLINK_ACTION_REMOVE_WORKFLOWS PreUnlinkAction = 2
	PreUnlinkAction_PRE_UNLINK_ACTION_PAUSE_WORKFLOWS  PreUnlinkAction = 3
)

// Enum value maps for PreUnlinkAction.
var (
	PreUnlinkAction_name = map[int32]string{
		0: "PRE_UNLINK_ACTION_UNSPECIFIED",
		1: "PRE_UNLINK_ACTION_NONE",
		2: "PRE_UNLINK_ACTION_REMOVE_WORKFLOWS",
		3: "PRE_UNLINK_ACTION_PAUSE_WORKFLOWS",
	}
	PreUnlinkAction_value = map[string]int32{
		"PRE_UNLINK_ACTION_UNSPECIFIED":      0,
		"PRE_UNLINK_ACTION_NONE":             1,
		"PRE_UNLINK_ACTION_REMOVE_WORKFLOWS": 2,
		"PRE_UNLINK_ACTION_PAUSE_WORKFLOWS":  3,
	}
)

func (x PreUnlinkAction) Enum() *PreUnlinkAction {
	p := new(PreUnlinkAction)
	*p = x
	return p
}

func (x PreUnlinkAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreUnlinkAction) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_linking_types_proto_enumTypes[4].Descriptor()
}

func (PreUnlinkAction) Type() protoreflect.EnumType {
	return &file_v1_linking_types_proto_enumTypes[4]
}

func (x PreUnlinkAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreUnlinkAction.Descriptor instead.
func (PreUnlinkAction) EnumDescriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{4}
}

// information about linked owner, based on the data collected when link request was submitted via API
// and if ownership proof has been found on the Workflow Registry side or not (if not, then it's a pending request)
type LinkedOwner struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	WorkflowOwner       string                 `protobuf:"bytes,1,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	Environment         EnvironmentName        `protobuf:"varint,2,opt,name=environment,proto3,enum=linking.v1.EnvironmentName" json:"environment,omitempty"`
	Status              VerificationStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=linking.v1.VerificationStatus" json:"status,omitempty"`
	LinkTransactionHash string                 `protobuf:"bytes,4,opt,name=link_transaction_hash,json=linkTransactionHash,proto3" json:"link_transaction_hash,omitempty"`
	LinkVerifiedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=link_verified_at,json=linkVerifiedAt,proto3" json:"link_verified_at,omitempty"`
	// chain information based on the environment
	ChainSelector uint64 `protobuf:"varint,6,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	// Workflow Registry contract on that chain
	ContractAddress string `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// human-readable (memorable) name specified by the user for this owner address
	OwnerNameLabel string `protobuf:"bytes,8,opt,name=owner_name_label,json=ownerNameLabel,proto3" json:"owner_name_label,omitempty"` // optional
	// which process did the user select to use: EOA or MSIG flow
	RequestProcess LinkRequestProcess `protobuf:"varint,9,opt,name=request_process,json=requestProcess,proto3,enum=linking.v1.LinkRequestProcess" json:"request_process,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LinkedOwner) Reset() {
	*x = LinkedOwner{}
	mi := &file_v1_linking_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LinkedOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinkedOwner) ProtoMessage() {}

func (x *LinkedOwner) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinkedOwner.ProtoReflect.Descriptor instead.
func (*LinkedOwner) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{0}
}

func (x *LinkedOwner) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *LinkedOwner) GetEnvironment() EnvironmentName {
	if x != nil {
		return x.Environment
	}
	return EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED
}

func (x *LinkedOwner) GetStatus() VerificationStatus {
	if x != nil {
		return x.Status
	}
	return VerificationStatus_VERIFICATION_STATUS_UNSPECIFIED
}

func (x *LinkedOwner) GetLinkTransactionHash() string {
	if x != nil {
		return x.LinkTransactionHash
	}
	return ""
}

func (x *LinkedOwner) GetLinkVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LinkVerifiedAt
	}
	return nil
}

func (x *LinkedOwner) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

func (x *LinkedOwner) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *LinkedOwner) GetOwnerNameLabel() string {
	if x != nil {
		return x.OwnerNameLabel
	}
	return ""
}

func (x *LinkedOwner) GetRequestProcess() LinkRequestProcess {
	if x != nil {
		return x.RequestProcess
	}
	return LinkRequestProcess_LINK_REQUEST_PROCESS_UNSPECIFIED
}

// information about unlinked owner, based on the data collected when unlink request was submitted via API
// and if ownership proof has been found on the Workflow Registry side or not (if not, then it's a pending request)
type UnlinkedOwner struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	WorkflowOwner         string                 `protobuf:"bytes,1,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	Environment           EnvironmentName        `protobuf:"varint,2,opt,name=environment,proto3,enum=linking.v1.EnvironmentName" json:"environment,omitempty"`
	Status                VerificationStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=linking.v1.VerificationStatus" json:"status,omitempty"`
	UnlinkTransactionHash string                 `protobuf:"bytes,4,opt,name=unlink_transaction_hash,json=unlinkTransactionHash,proto3" json:"unlink_transaction_hash,omitempty"`
	UnlinkVerifiedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=unlink_verified_at,json=unlinkVerifiedAt,proto3" json:"unlink_verified_at,omitempty"`
	// chain information based on the environment
	ChainSelector uint64 `protobuf:"varint,6,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	// Workflow Registry contract on that chain
	ContractAddress string `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// human-readable (memorable) name specified by the user for this owner address
	OwnerNameLabel string `protobuf:"bytes,8,opt,name=owner_name_label,json=ownerNameLabel,proto3" json:"owner_name_label,omitempty"` // optional
	// which process did the user select to use: EOA or MSIG flow
	RequestProcess LinkRequestProcess `protobuf:"varint,9,opt,name=request_process,json=requestProcess,proto3,enum=linking.v1.LinkRequestProcess" json:"request_process,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UnlinkedOwner) Reset() {
	*x = UnlinkedOwner{}
	mi := &file_v1_linking_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlinkedOwner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlinkedOwner) ProtoMessage() {}

func (x *UnlinkedOwner) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlinkedOwner.ProtoReflect.Descriptor instead.
func (*UnlinkedOwner) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{1}
}

func (x *UnlinkedOwner) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *UnlinkedOwner) GetEnvironment() EnvironmentName {
	if x != nil {
		return x.Environment
	}
	return EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED
}

func (x *UnlinkedOwner) GetStatus() VerificationStatus {
	if x != nil {
		return x.Status
	}
	return VerificationStatus_VERIFICATION_STATUS_UNSPECIFIED
}

func (x *UnlinkedOwner) GetUnlinkTransactionHash() string {
	if x != nil {
		return x.UnlinkTransactionHash
	}
	return ""
}

func (x *UnlinkedOwner) GetUnlinkVerifiedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UnlinkVerifiedAt
	}
	return nil
}

func (x *UnlinkedOwner) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

func (x *UnlinkedOwner) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *UnlinkedOwner) GetOwnerNameLabel() string {
	if x != nil {
		return x.OwnerNameLabel
	}
	return ""
}

func (x *UnlinkedOwner) GetRequestProcess() LinkRequestProcess {
	if x != nil {
		return x.RequestProcess
	}
	return LinkRequestProcess_LINK_REQUEST_PROCESS_UNSPECIFIED
}

// ================================================================
// │    request + response proto messages for LISTING OWNERS      │
// ================================================================
type ListOwnersRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	Filter         ListOwnersFilter       `protobuf:"varint,2,opt,name=filter,proto3,enum=linking.v1.ListOwnersFilter" json:"filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListOwnersRequest) Reset() {
	*x = ListOwnersRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnersRequest) ProtoMessage() {}

func (x *ListOwnersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnersRequest.ProtoReflect.Descriptor instead.
func (*ListOwnersRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{2}
}

func (x *ListOwnersRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *ListOwnersRequest) GetFilter() ListOwnersFilter {
	if x != nil {
		return x.Filter
	}
	return ListOwnersFilter_LIST_OWNERS_FILTER_UNSPECIFIED
}

// we won't use pagination because the assumption is organizations will have only a few linked and unlinked owners
type ListOwnersResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	LinkedOwners   []*LinkedOwner         `protobuf:"bytes,1,rep,name=linked_owners,json=linkedOwners,proto3" json:"linked_owners,omitempty"`
	UnlinkedOwners []*UnlinkedOwner       `protobuf:"bytes,2,rep,name=unlinked_owners,json=unlinkedOwners,proto3" json:"unlinked_owners,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListOwnersResponse) Reset() {
	*x = ListOwnersResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListOwnersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListOwnersResponse) ProtoMessage() {}

func (x *ListOwnersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListOwnersResponse.ProtoReflect.Descriptor instead.
func (*ListOwnersResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{3}
}

func (x *ListOwnersResponse) GetLinkedOwners() []*LinkedOwner {
	if x != nil {
		return x.LinkedOwners
	}
	return nil
}

func (x *ListOwnersResponse) GetUnlinkedOwners() []*UnlinkedOwner {
	if x != nil {
		return x.UnlinkedOwners
	}
	return nil
}

// ================================================================
// │    request + response proto messages for UPDATING OWNERS      │
// ================================================================
type UpdateOwnerMetadataRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	WorkflowOwner  string                 `protobuf:"bytes,2,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	Environment    EnvironmentName        `protobuf:"varint,3,opt,name=environment,proto3,enum=linking.v1.EnvironmentName" json:"environment,omitempty"`
	// human-readable (memorable) name specified by the user for this owner address
	OwnerNameLabel string `protobuf:"bytes,4,opt,name=owner_name_label,json=ownerNameLabel,proto3" json:"owner_name_label,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateOwnerMetadataRequest) Reset() {
	*x = UpdateOwnerMetadataRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOwnerMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOwnerMetadataRequest) ProtoMessage() {}

func (x *UpdateOwnerMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOwnerMetadataRequest.ProtoReflect.Descriptor instead.
func (*UpdateOwnerMetadataRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateOwnerMetadataRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *UpdateOwnerMetadataRequest) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *UpdateOwnerMetadataRequest) GetEnvironment() EnvironmentName {
	if x != nil {
		return x.Environment
	}
	return EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED
}

func (x *UpdateOwnerMetadataRequest) GetOwnerNameLabel() string {
	if x != nil {
		return x.OwnerNameLabel
	}
	return ""
}

// success/failure will be indicated with gRPC status code
type UpdateOwnerMetadataResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateOwnerMetadataResponse) Reset() {
	*x = UpdateOwnerMetadataResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateOwnerMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOwnerMetadataResponse) ProtoMessage() {}

func (x *UpdateOwnerMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOwnerMetadataResponse.ProtoReflect.Descriptor instead.
func (*UpdateOwnerMetadataResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{5}
}

// ================================================================
// │      request + response proto messages for LINKING           │
// ================================================================
type InitiateLinkingRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	WorkflowOwner  string                 `protobuf:"bytes,2,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	IdempotencyKey string                 `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // dedup requests
	Environment    EnvironmentName        `protobuf:"varint,4,opt,name=environment,proto3,enum=linking.v1.EnvironmentName" json:"environment,omitempty"`
	// human-readable (memorable) name specified by the user for this owner address
	OwnerNameLabel string `protobuf:"bytes,5,opt,name=owner_name_label,json=ownerNameLabel,proto3" json:"owner_name_label,omitempty"` // optional
	// which process did the user select to use: EOA or MSIG flow
	RequestProcess LinkRequestProcess `protobuf:"varint,6,opt,name=request_process,json=requestProcess,proto3,enum=linking.v1.LinkRequestProcess" json:"request_process,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InitiateLinkingRequest) Reset() {
	*x = InitiateLinkingRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateLinkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateLinkingRequest) ProtoMessage() {}

func (x *InitiateLinkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateLinkingRequest.ProtoReflect.Descriptor instead.
func (*InitiateLinkingRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{6}
}

func (x *InitiateLinkingRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *InitiateLinkingRequest) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *InitiateLinkingRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *InitiateLinkingRequest) GetEnvironment() EnvironmentName {
	if x != nil {
		return x.Environment
	}
	return EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED
}

func (x *InitiateLinkingRequest) GetOwnerNameLabel() string {
	if x != nil {
		return x.OwnerNameLabel
	}
	return ""
}

func (x *InitiateLinkingRequest) GetRequestProcess() LinkRequestProcess {
	if x != nil {
		return x.RequestProcess
	}
	return LinkRequestProcess_LINK_REQUEST_PROCESS_UNSPECIFIED
}

type InitiateLinkingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ownership proof is guaranteed to be unique per linking request
	// this payload must be submitted to the Workflow Registry and transaction must be signed
	// by the workflow owner before validity timestamp expires
	OwnershipProof string                 `protobuf:"bytes,1,opt,name=ownership_proof,json=ownershipProof,proto3" json:"ownership_proof,omitempty"`
	WorkflowOwner  string                 `protobuf:"bytes,2,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	ValidUntil     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Signature      string                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	// chain information based on the selected environment
	ChainSelector uint64 `protobuf:"varint,5,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	// Workflow Registry contract on that chain
	ContractAddress string `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// data to submit: ABI encoded function selector and parameters
	TransactionData string `protobuf:"bytes,7,opt,name=transaction_data,json=transactionData,proto3" json:"transaction_data,omitempty"`
	// based on the data below, user can reconstruct the transaction data:
	// human readable function signature from the registry contract
	FunctionSignature string `protobuf:"bytes,8,opt,name=function_signature,json=functionSignature,proto3" json:"function_signature,omitempty"`
	// a list of human readable function arguments
	FunctionsArgs []string `protobuf:"bytes,9,rep,name=functions_args,json=functionsArgs,proto3" json:"functions_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateLinkingResponse) Reset() {
	*x = InitiateLinkingResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateLinkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateLinkingResponse) ProtoMessage() {}

func (x *InitiateLinkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateLinkingResponse.ProtoReflect.Descriptor instead.
func (*InitiateLinkingResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{7}
}

func (x *InitiateLinkingResponse) GetOwnershipProof() string {
	if x != nil {
		return x.OwnershipProof
	}
	return ""
}

func (x *InitiateLinkingResponse) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *InitiateLinkingResponse) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *InitiateLinkingResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InitiateLinkingResponse) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

func (x *InitiateLinkingResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *InitiateLinkingResponse) GetTransactionData() string {
	if x != nil {
		return x.TransactionData
	}
	return ""
}

func (x *InitiateLinkingResponse) GetFunctionSignature() string {
	if x != nil {
		return x.FunctionSignature
	}
	return ""
}

func (x *InitiateLinkingResponse) GetFunctionsArgs() []string {
	if x != nil {
		return x.FunctionsArgs
	}
	return nil
}

// ================================================================
// │     request + response proto messages for UNLINKING          │
// ================================================================
type InitiateUnlinkingRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId  string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	WorkflowOwner   string                 `protobuf:"bytes,2,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	IdempotencyKey  string                 `protobuf:"bytes,3,opt,name=idempotency_key,json=idempotencyKey,proto3" json:"idempotency_key,omitempty"` // dedup requests
	Environment     EnvironmentName        `protobuf:"varint,4,opt,name=environment,proto3,enum=linking.v1.EnvironmentName" json:"environment,omitempty"`
	PreUnlinkAction PreUnlinkAction        `protobuf:"varint,5,opt,name=pre_unlink_action,json=preUnlinkAction,proto3,enum=linking.v1.PreUnlinkAction" json:"pre_unlink_action,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *InitiateUnlinkingRequest) Reset() {
	*x = InitiateUnlinkingRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateUnlinkingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateUnlinkingRequest) ProtoMessage() {}

func (x *InitiateUnlinkingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateUnlinkingRequest.ProtoReflect.Descriptor instead.
func (*InitiateUnlinkingRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{8}
}

func (x *InitiateUnlinkingRequest) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

func (x *InitiateUnlinkingRequest) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *InitiateUnlinkingRequest) GetIdempotencyKey() string {
	if x != nil {
		return x.IdempotencyKey
	}
	return ""
}

func (x *InitiateUnlinkingRequest) GetEnvironment() EnvironmentName {
	if x != nil {
		return x.Environment
	}
	return EnvironmentName_ENVIRONMENT_NAME_UNSPECIFIED
}

func (x *InitiateUnlinkingRequest) GetPreUnlinkAction() PreUnlinkAction {
	if x != nil {
		return x.PreUnlinkAction
	}
	return PreUnlinkAction_PRE_UNLINK_ACTION_UNSPECIFIED
}

type InitiateUnlinkingResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// must use the same ownership proof as the one from used for linking
	// this payload must be submitted to the Workflow Registry and transaction must be signed
	// by the workflow owner before validity timestamp expires
	OwnershipProof string                 `protobuf:"bytes,1,opt,name=ownership_proof,json=ownershipProof,proto3" json:"ownership_proof,omitempty"`
	WorkflowOwner  string                 `protobuf:"bytes,2,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	ValidUntil     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=valid_until,json=validUntil,proto3" json:"valid_until,omitempty"`
	Signature      string                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	// chain information based on the selected environment
	ChainSelector uint64 `protobuf:"varint,5,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	// Workflow Registry contract on that chain
	ContractAddress string `protobuf:"bytes,6,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	// data to submit: ABI encoded function selector and parameters
	TransactionData string `protobuf:"bytes,7,opt,name=transaction_data,json=transactionData,proto3" json:"transaction_data,omitempty"`
	// based on the data below, user can reconstruct the transaction data:
	// human readable function signature from the registry contract
	FunctionSignature string `protobuf:"bytes,8,opt,name=function_signature,json=functionSignature,proto3" json:"function_signature,omitempty"`
	// a list of human readable function arguments
	FunctionsArgs []string `protobuf:"bytes,9,rep,name=functions_args,json=functionsArgs,proto3" json:"functions_args,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiateUnlinkingResponse) Reset() {
	*x = InitiateUnlinkingResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiateUnlinkingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiateUnlinkingResponse) ProtoMessage() {}

func (x *InitiateUnlinkingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiateUnlinkingResponse.ProtoReflect.Descriptor instead.
func (*InitiateUnlinkingResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{9}
}

func (x *InitiateUnlinkingResponse) GetOwnershipProof() string {
	if x != nil {
		return x.OwnershipProof
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetValidUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.ValidUntil
	}
	return nil
}

func (x *InitiateUnlinkingResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

func (x *InitiateUnlinkingResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetTransactionData() string {
	if x != nil {
		return x.TransactionData
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetFunctionSignature() string {
	if x != nil {
		return x.FunctionSignature
	}
	return ""
}

func (x *InitiateUnlinkingResponse) GetFunctionsArgs() []string {
	if x != nil {
		return x.FunctionsArgs
	}
	return nil
}

// ============================================================================
// │ request + response proto messages to resolve org ID by workflow owner │
// ============================================================================
type GetOrganizationFromWorkflowOwnerRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	WorkflowOwner           string                 `protobuf:"bytes,1,opt,name=workflow_owner,json=workflowOwner,proto3" json:"workflow_owner,omitempty"`
	WorkflowRegistryAddress string                 `protobuf:"bytes,2,opt,name=workflow_registry_address,json=workflowRegistryAddress,proto3" json:"workflow_registry_address,omitempty"`
	ChainSelector           uint64                 `protobuf:"varint,3,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetOrganizationFromWorkflowOwnerRequest) Reset() {
	*x = GetOrganizationFromWorkflowOwnerRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationFromWorkflowOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationFromWorkflowOwnerRequest) ProtoMessage() {}

func (x *GetOrganizationFromWorkflowOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationFromWorkflowOwnerRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationFromWorkflowOwnerRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrganizationFromWorkflowOwnerRequest) GetWorkflowOwner() string {
	if x != nil {
		return x.WorkflowOwner
	}
	return ""
}

func (x *GetOrganizationFromWorkflowOwnerRequest) GetWorkflowRegistryAddress() string {
	if x != nil {
		return x.WorkflowRegistryAddress
	}
	return ""
}

func (x *GetOrganizationFromWorkflowOwnerRequest) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

type GetOrganizationFromWorkflowOwnerResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetOrganizationFromWorkflowOwnerResponse) Reset() {
	*x = GetOrganizationFromWorkflowOwnerResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationFromWorkflowOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationFromWorkflowOwnerResponse) ProtoMessage() {}

func (x *GetOrganizationFromWorkflowOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationFromWorkflowOwnerResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationFromWorkflowOwnerResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrganizationFromWorkflowOwnerResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

// ============================================================================
// │ request + response proto messages to resolve org ID by workflow ID │
// ============================================================================
type GetOrganizationFromWorkflowIDRequest struct {
	state                   protoimpl.MessageState `protogen:"open.v1"`
	WorkflowId              string                 `protobuf:"bytes,1,opt,name=workflow_id,json=workflowId,proto3" json:"workflow_id,omitempty"`
	WorkflowRegistryAddress string                 `protobuf:"bytes,2,opt,name=workflow_registry_address,json=workflowRegistryAddress,proto3" json:"workflow_registry_address,omitempty"`
	ChainSelector           uint64                 `protobuf:"varint,3,opt,name=chain_selector,json=chainSelector,proto3" json:"chain_selector,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *GetOrganizationFromWorkflowIDRequest) Reset() {
	*x = GetOrganizationFromWorkflowIDRequest{}
	mi := &file_v1_linking_types_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationFromWorkflowIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationFromWorkflowIDRequest) ProtoMessage() {}

func (x *GetOrganizationFromWorkflowIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationFromWorkflowIDRequest.ProtoReflect.Descriptor instead.
func (*GetOrganizationFromWorkflowIDRequest) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{12}
}

func (x *GetOrganizationFromWorkflowIDRequest) GetWorkflowId() string {
	if x != nil {
		return x.WorkflowId
	}
	return ""
}

func (x *GetOrganizationFromWorkflowIDRequest) GetWorkflowRegistryAddress() string {
	if x != nil {
		return x.WorkflowRegistryAddress
	}
	return ""
}

func (x *GetOrganizationFromWorkflowIDRequest) GetChainSelector() uint64 {
	if x != nil {
		return x.ChainSelector
	}
	return 0
}

type GetOrganizationFromWorkflowIDResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OrganizationId string                 `protobuf:"bytes,1,opt,name=organization_id,json=organizationId,proto3" json:"organization_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetOrganizationFromWorkflowIDResponse) Reset() {
	*x = GetOrganizationFromWorkflowIDResponse{}
	mi := &file_v1_linking_types_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOrganizationFromWorkflowIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrganizationFromWorkflowIDResponse) ProtoMessage() {}

func (x *GetOrganizationFromWorkflowIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_v1_linking_types_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrganizationFromWorkflowIDResponse.ProtoReflect.Descriptor instead.
func (*GetOrganizationFromWorkflowIDResponse) Descriptor() ([]byte, []int) {
	return file_v1_linking_types_proto_rawDescGZIP(), []int{13}
}

func (x *GetOrganizationFromWorkflowIDResponse) GetOrganizationId() string {
	if x != nil {
		return x.OrganizationId
	}
	return ""
}

var File_v1_linking_types_proto protoreflect.FileDescriptor

const file_v1_linking_types_proto_rawDesc = "" +
	"\n" +
	"\x16v1/linking-types.proto\x12\n" +
	"linking.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xea\x03\n" +
	"\vLinkedOwner\x12%\n" +
	"\x0eworkflow_owner\x18\x01 \x01(\tR\rworkflowOwner\x12=\n" +
	"\venvironment\x18\x02 \x01(\x0e2\x1b.linking.v1.EnvironmentNameR\venvironment\x126\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1e.linking.v1.VerificationStatusR\x06status\x122\n" +
	"\x15link_transaction_hash\x18\x04 \x01(\tR\x13linkTransactionHash\x12D\n" +
	"\x10link_verified_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x0elinkVerifiedAt\x12%\n" +
	"\x0echain_selector\x18\x06 \x01(\x04R\rchainSelector\x12)\n" +
	"\x10contract_address\x18\a \x01(\tR\x0fcontractAddress\x12(\n" +
	"\x10owner_name_label\x18\b \x01(\tR\x0eownerNameLabel\x12G\n" +
	"\x0frequest_process\x18\t \x01(\x0e2\x1e.linking.v1.LinkRequestProcessR\x0erequestProcess\"\xf4\x03\n" +
	"\rUnlinkedOwner\x12%\n" +
	"\x0eworkflow_owner\x18\x01 \x01(\tR\rworkflowOwner\x12=\n" +
	"\venvironment\x18\x02 \x01(\x0e2\x1b.linking.v1.EnvironmentNameR\venvironment\x126\n" +
	"\x06status\x18\x03 \x01(\x0e2\x1e.linking.v1.VerificationStatusR\x06status\x126\n" +
	"\x17unlink_transaction_hash\x18\x04 \x01(\tR\x15unlinkTransactionHash\x12H\n" +
	"\x12unlink_verified_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x10unlinkVerifiedAt\x12%\n" +
	"\x0echain_selector\x18\x06 \x01(\x04R\rchainSelector\x12)\n" +
	"\x10contract_address\x18\a \x01(\tR\x0fcontractAddress\x12(\n" +
	"\x10owner_name_label\x18\b \x01(\tR\x0eownerNameLabel\x12G\n" +
	"\x0frequest_process\x18\t \x01(\x0e2\x1e.linking.v1.LinkRequestProcessR\x0erequestProcess\"r\n" +
	"\x11ListOwnersRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x124\n" +
	"\x06filter\x18\x02 \x01(\x0e2\x1c.linking.v1.ListOwnersFilterR\x06filter\"\x96\x01\n" +
	"\x12ListOwnersResponse\x12<\n" +
	"\rlinked_owners\x18\x01 \x03(\v2\x17.linking.v1.LinkedOwnerR\flinkedOwners\x12B\n" +
	"\x0funlinked_owners\x18\x02 \x03(\v2\x19.linking.v1.UnlinkedOwnerR\x0eunlinkedOwners\"\xd5\x01\n" +
	"\x1aUpdateOwnerMetadataRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12%\n" +
	"\x0eworkflow_owner\x18\x02 \x01(\tR\rworkflowOwner\x12=\n" +
	"\venvironment\x18\x03 \x01(\x0e2\x1b.linking.v1.EnvironmentNameR\venvironment\x12(\n" +
	"\x10owner_name_label\x18\x04 \x01(\tR\x0eownerNameLabel\"\x1d\n" +
	"\x1bUpdateOwnerMetadataResponse\"\xc3\x02\n" +
	"\x16InitiateLinkingRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12%\n" +
	"\x0eworkflow_owner\x18\x02 \x01(\tR\rworkflowOwner\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x12=\n" +
	"\venvironment\x18\x04 \x01(\x0e2\x1b.linking.v1.EnvironmentNameR\venvironment\x12(\n" +
	"\x10owner_name_label\x18\x05 \x01(\tR\x0eownerNameLabel\x12G\n" +
	"\x0frequest_process\x18\x06 \x01(\x0e2\x1e.linking.v1.LinkRequestProcessR\x0erequestProcess\"\x97\x03\n" +
	"\x17InitiateLinkingResponse\x12'\n" +
	"\x0fownership_proof\x18\x01 \x01(\tR\x0eownershipProof\x12%\n" +
	"\x0eworkflow_owner\x18\x02 \x01(\tR\rworkflowOwner\x12;\n" +
	"\vvalid_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"validUntil\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\tR\tsignature\x12%\n" +
	"\x0echain_selector\x18\x05 \x01(\x04R\rchainSelector\x12)\n" +
	"\x10contract_address\x18\x06 \x01(\tR\x0fcontractAddress\x12)\n" +
	"\x10transaction_data\x18\a \x01(\tR\x0ftransactionData\x12-\n" +
	"\x12function_signature\x18\b \x01(\tR\x11functionSignature\x12%\n" +
	"\x0efunctions_args\x18\t \x03(\tR\rfunctionsArgs\"\x9b\x02\n" +
	"\x18InitiateUnlinkingRequest\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\x12%\n" +
	"\x0eworkflow_owner\x18\x02 \x01(\tR\rworkflowOwner\x12'\n" +
	"\x0fidempotency_key\x18\x03 \x01(\tR\x0eidempotencyKey\x12=\n" +
	"\venvironment\x18\x04 \x01(\x0e2\x1b.linking.v1.EnvironmentNameR\venvironment\x12G\n" +
	"\x11pre_unlink_action\x18\x05 \x01(\x0e2\x1b.linking.v1.PreUnlinkActionR\x0fpreUnlinkAction\"\x99\x03\n" +
	"\x19InitiateUnlinkingResponse\x12'\n" +
	"\x0fownership_proof\x18\x01 \x01(\tR\x0eownershipProof\x12%\n" +
	"\x0eworkflow_owner\x18\x02 \x01(\tR\rworkflowOwner\x12;\n" +
	"\vvalid_until\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"validUntil\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\tR\tsignature\x12%\n" +
	"\x0echain_selector\x18\x05 \x01(\x04R\rchainSelector\x12)\n" +
	"\x10contract_address\x18\x06 \x01(\tR\x0fcontractAddress\x12)\n" +
	"\x10transaction_data\x18\a \x01(\tR\x0ftransactionData\x12-\n" +
	"\x12function_signature\x18\b \x01(\tR\x11functionSignature\x12%\n" +
	"\x0efunctions_args\x18\t \x03(\tR\rfunctionsArgs\"\xb3\x01\n" +
	"'GetOrganizationFromWorkflowOwnerRequest\x12%\n" +
	"\x0eworkflow_owner\x18\x01 \x01(\tR\rworkflowOwner\x12:\n" +
	"\x19workflow_registry_address\x18\x02 \x01(\tR\x17workflowRegistryAddress\x12%\n" +
	"\x0echain_selector\x18\x03 \x01(\x04R\rchainSelector\"S\n" +
	"(GetOrganizationFromWorkflowOwnerResponse\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId\"\xaa\x01\n" +
	"$GetOrganizationFromWorkflowIDRequest\x12\x1f\n" +
	"\vworkflow_id\x18\x01 \x01(\tR\n" +
	"workflowId\x12:\n" +
	"\x19workflow_registry_address\x18\x02 \x01(\tR\x17workflowRegistryAddress\x12%\n" +
	"\x0echain_selector\x18\x03 \x01(\x04R\rchainSelector\"P\n" +
	"%GetOrganizationFromWorkflowIDResponse\x12'\n" +
	"\x0forganization_id\x18\x01 \x01(\tR\x0eorganizationId*\x99\x01\n" +
	"\x12LinkRequestProcess\x12$\n" +
	" LINK_REQUEST_PROCESS_UNSPECIFIED\x10\x00\x12\x1c\n" +
	"\x18LINK_REQUEST_PROCESS_EOA\x10\x01\x12\x1d\n" +
	"\x19LINK_REQUEST_PROCESS_MSIG\x10\x02\x12 \n" +
	"\x1cLINK_REQUEST_PROCESS_UNKNOWN\x10\x03*\xa2\x01\n" +
	"\x10ListOwnersFilter\x12\"\n" +
	"\x1eLIST_OWNERS_FILTER_UNSPECIFIED\x10\x00\x12\"\n" +
	"\x1eLIST_OWNERS_FILTER_LINKED_ONLY\x10\x01\x12$\n" +
	" LIST_OWNERS_FILTER_UNLINKED_ONLY\x10\x02\x12 \n" +
	"\x1cLIST_OWNERS_FILTER_NO_FILTER\x10\x03*\x85\x01\n" +
	"\x0fEnvironmentName\x12 \n" +
	"\x1cENVIRONMENT_NAME_UNSPECIFIED\x10\x00\x12'\n" +
	"#ENVIRONMENT_NAME_PRODUCTION_MAINNET\x10\x01\x12'\n" +
	"#ENVIRONMENT_NAME_PRODUCTION_TESTNET\x10\x02*\xc0\x01\n" +
	"\x12VerificationStatus\x12#\n" +
	"\x1fVERIFICATION_STATUS_UNSPECIFIED\x10\x00\x12\x1f\n" +
	"\x1bVERIFICATION_STATUS_PENDING\x10\x01\x12#\n" +
	"\x1fVERIFICATION_STATUS_SUCCESSFULL\x10\x02\x12\x1f\n" +
	"\x1bVERIFICATION_STATUS_EXPIRED\x10\x03\x12\x1e\n" +
	"\x1aVERIFICATION_STATUS_FAILED\x10\x04*\x9f\x01\n" +
	"\x0fPreUnlinkAction\x12!\n" +
	"\x1dPRE_UNLINK_ACTION_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PRE_UNLINK_ACTION_NONE\x10\x01\x12&\n" +
	"\"PRE_UNLINK_ACTION_REMOVE_WORKFLOWS\x10\x02\x12%\n" +
	"!PRE_UNLINK_ACTION_PAUSE_WORKFLOWS\x10\x03BDZBgithub.com/smartcontractkit/chainlink-protos/linking-service/go/v1b\x06proto3"

var (
	file_v1_linking_types_proto_rawDescOnce sync.Once
	file_v1_linking_types_proto_rawDescData []byte
)

func file_v1_linking_types_proto_rawDescGZIP() []byte {
	file_v1_linking_types_proto_rawDescOnce.Do(func() {
		file_v1_linking_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_v1_linking_types_proto_rawDesc), len(file_v1_linking_types_proto_rawDesc)))
	})
	return file_v1_linking_types_proto_rawDescData
}

var file_v1_linking_types_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_v1_linking_types_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_v1_linking_types_proto_goTypes = []any{
	(LinkRequestProcess)(0),                          // 0: linking.v1.LinkRequestProcess
	(ListOwnersFilter)(0),                            // 1: linking.v1.ListOwnersFilter
	(EnvironmentName)(0),                             // 2: linking.v1.EnvironmentName
	(VerificationStatus)(0),                          // 3: linking.v1.VerificationStatus
	(PreUnlinkAction)(0),                             // 4: linking.v1.PreUnlinkAction
	(*LinkedOwner)(nil),                              // 5: linking.v1.LinkedOwner
	(*UnlinkedOwner)(nil),                            // 6: linking.v1.UnlinkedOwner
	(*ListOwnersRequest)(nil),                        // 7: linking.v1.ListOwnersRequest
	(*ListOwnersResponse)(nil),                       // 8: linking.v1.ListOwnersResponse
	(*UpdateOwnerMetadataRequest)(nil),               // 9: linking.v1.UpdateOwnerMetadataRequest
	(*UpdateOwnerMetadataResponse)(nil),              // 10: linking.v1.UpdateOwnerMetadataResponse
	(*InitiateLinkingRequest)(nil),                   // 11: linking.v1.InitiateLinkingRequest
	(*InitiateLinkingResponse)(nil),                  // 12: linking.v1.InitiateLinkingResponse
	(*InitiateUnlinkingRequest)(nil),                 // 13: linking.v1.InitiateUnlinkingRequest
	(*InitiateUnlinkingResponse)(nil),                // 14: linking.v1.InitiateUnlinkingResponse
	(*GetOrganizationFromWorkflowOwnerRequest)(nil),  // 15: linking.v1.GetOrganizationFromWorkflowOwnerRequest
	(*GetOrganizationFromWorkflowOwnerResponse)(nil), // 16: linking.v1.GetOrganizationFromWorkflowOwnerResponse
	(*GetOrganizationFromWorkflowIDRequest)(nil),     // 17: linking.v1.GetOrganizationFromWorkflowIDRequest
	(*GetOrganizationFromWorkflowIDResponse)(nil),    // 18: linking.v1.GetOrganizationFromWorkflowIDResponse
	(*timestamppb.Timestamp)(nil),                    // 19: google.protobuf.Timestamp
}
var file_v1_linking_types_proto_depIdxs = []int32{
	2,  // 0: linking.v1.LinkedOwner.environment:type_name -> linking.v1.EnvironmentName
	3,  // 1: linking.v1.LinkedOwner.status:type_name -> linking.v1.VerificationStatus
	19, // 2: linking.v1.LinkedOwner.link_verified_at:type_name -> google.protobuf.Timestamp
	0,  // 3: linking.v1.LinkedOwner.request_process:type_name -> linking.v1.LinkRequestProcess
	2,  // 4: linking.v1.UnlinkedOwner.environment:type_name -> linking.v1.EnvironmentName
	3,  // 5: linking.v1.UnlinkedOwner.status:type_name -> linking.v1.VerificationStatus
	19, // 6: linking.v1.UnlinkedOwner.unlink_verified_at:type_name -> google.protobuf.Timestamp
	0,  // 7: linking.v1.UnlinkedOwner.request_process:type_name -> linking.v1.LinkRequestProcess
	1,  // 8: linking.v1.ListOwnersRequest.filter:type_name -> linking.v1.ListOwnersFilter
	5,  // 9: linking.v1.ListOwnersResponse.linked_owners:type_name -> linking.v1.LinkedOwner
	6,  // 10: linking.v1.ListOwnersResponse.unlinked_owners:type_name -> linking.v1.UnlinkedOwner
	2,  // 11: linking.v1.UpdateOwnerMetadataRequest.environment:type_name -> linking.v1.EnvironmentName
	2,  // 12: linking.v1.InitiateLinkingRequest.environment:type_name -> linking.v1.EnvironmentName
	0,  // 13: linking.v1.InitiateLinkingRequest.request_process:type_name -> linking.v1.LinkRequestProcess
	19, // 14: linking.v1.InitiateLinkingResponse.valid_until:type_name -> google.protobuf.Timestamp
	2,  // 15: linking.v1.InitiateUnlinkingRequest.environment:type_name -> linking.v1.EnvironmentName
	4,  // 16: linking.v1.InitiateUnlinkingRequest.pre_unlink_action:type_name -> linking.v1.PreUnlinkAction
	19, // 17: linking.v1.InitiateUnlinkingResponse.valid_until:type_name -> google.protobuf.Timestamp
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_v1_linking_types_proto_init() }
func file_v1_linking_types_proto_init() {
	if File_v1_linking_types_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_v1_linking_types_proto_rawDesc), len(file_v1_linking_types_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_linking_types_proto_goTypes,
		DependencyIndexes: file_v1_linking_types_proto_depIdxs,
		EnumInfos:         file_v1_linking_types_proto_enumTypes,
		MessageInfos:      file_v1_linking_types_proto_msgTypes,
	}.Build()
	File_v1_linking_types_proto = out.File
	file_v1_linking_types_proto_goTypes = nil
	file_v1_linking_types_proto_depIdxs = nil
}
