// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: orchestrator/feedsmanager/feedsmanager.proto

package feedsmanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Defines the allowed job types
type JobType int32

const (
	JobType_JOB_TYPE_UNSPECIFIED  JobType = 0
	JobType_JOB_TYPE_FLUX_MONITOR JobType = 1
	JobType_JOB_TYPE_OCR          JobType = 2
	JobType_JOB_TYPE_OCR2         JobType = 3
)

// Enum value maps for JobType.
var (
	JobType_name = map[int32]string{
		0: "JOB_TYPE_UNSPECIFIED",
		1: "JOB_TYPE_FLUX_MONITOR",
		2: "JOB_TYPE_OCR",
		3: "JOB_TYPE_OCR2",
	}
	JobType_value = map[string]int32{
		"JOB_TYPE_UNSPECIFIED":  0,
		"JOB_TYPE_FLUX_MONITOR": 1,
		"JOB_TYPE_OCR":          2,
		"JOB_TYPE_OCR2":         3,
	}
)

func (x JobType) Enum() *JobType {
	p := new(JobType)
	*p = x
	return p
}

func (x JobType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobType) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[0].Descriptor()
}

func (JobType) Type() protoreflect.EnumType {
	return &file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[0]
}

func (x JobType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobType.Descriptor instead.
func (JobType) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{0}
}

type ChainType int32

const (
	ChainType_CHAIN_TYPE_UNSPECIFIED ChainType = 0
	ChainType_CHAIN_TYPE_EVM         ChainType = 1
	ChainType_CHAIN_TYPE_SOLANA      ChainType = 2
	ChainType_CHAIN_TYPE_STARKNET    ChainType = 3
	ChainType_CHAIN_TYPE_APTOS       ChainType = 4
	ChainType_CHAIN_TYPE_TRON        ChainType = 5
	ChainType_CHAIN_TYPE_TON         ChainType = 6
	ChainType_CHAIN_TYPE_SUI         ChainType = 7
)

// Enum value maps for ChainType.
var (
	ChainType_name = map[int32]string{
		0: "CHAIN_TYPE_UNSPECIFIED",
		1: "CHAIN_TYPE_EVM",
		2: "CHAIN_TYPE_SOLANA",
		3: "CHAIN_TYPE_STARKNET",
		4: "CHAIN_TYPE_APTOS",
		5: "CHAIN_TYPE_TRON",
		6: "CHAIN_TYPE_TON",
		7: "CHAIN_TYPE_SUI",
	}
	ChainType_value = map[string]int32{
		"CHAIN_TYPE_UNSPECIFIED": 0,
		"CHAIN_TYPE_EVM":         1,
		"CHAIN_TYPE_SOLANA":      2,
		"CHAIN_TYPE_STARKNET":    3,
		"CHAIN_TYPE_APTOS":       4,
		"CHAIN_TYPE_TRON":        5,
		"CHAIN_TYPE_TON":         6,
		"CHAIN_TYPE_SUI":         7,
	}
)

func (x ChainType) Enum() *ChainType {
	p := new(ChainType)
	*p = x
	return p
}

func (x ChainType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChainType) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[1].Descriptor()
}

func (ChainType) Type() protoreflect.EnumType {
	return &file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[1]
}

func (x ChainType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChainType.Descriptor instead.
func (ChainType) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{1}
}

type ProposalStatus int32

const (
	ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED ProposalStatus = 0
	ProposalStatus_PROPOSAL_STATUS_PENDING     ProposalStatus = 1
	ProposalStatus_PROPOSAL_STATUS_APPROVED    ProposalStatus = 2
	ProposalStatus_PROPOSAL_STATUS_REJECTED    ProposalStatus = 3
	ProposalStatus_PROPOSAL_STATUS_CANCELLED   ProposalStatus = 4
	ProposalStatus_PROPOSAL_STATUS_REVOKED     ProposalStatus = 5
)

// Enum value maps for ProposalStatus.
var (
	ProposalStatus_name = map[int32]string{
		0: "PROPOSAL_STATUS_UNSPECIFIED",
		1: "PROPOSAL_STATUS_PENDING",
		2: "PROPOSAL_STATUS_APPROVED",
		3: "PROPOSAL_STATUS_REJECTED",
		4: "PROPOSAL_STATUS_CANCELLED",
		5: "PROPOSAL_STATUS_REVOKED",
	}
	ProposalStatus_value = map[string]int32{
		"PROPOSAL_STATUS_UNSPECIFIED": 0,
		"PROPOSAL_STATUS_PENDING":     1,
		"PROPOSAL_STATUS_APPROVED":    2,
		"PROPOSAL_STATUS_REJECTED":    3,
		"PROPOSAL_STATUS_CANCELLED":   4,
		"PROPOSAL_STATUS_REVOKED":     5,
	}
)

func (x ProposalStatus) Enum() *ProposalStatus {
	p := new(ProposalStatus)
	*p = x
	return p
}

func (x ProposalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[2].Descriptor()
}

func (ProposalStatus) Type() protoreflect.EnumType {
	return &file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[2]
}

func (x ProposalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalStatus.Descriptor instead.
func (ProposalStatus) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{2}
}

type ProposalDeliveryStatus int32

const (
	ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_UNSPECIFIED  ProposalDeliveryStatus = 0
	ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_PENDING      ProposalDeliveryStatus = 1
	ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_DELIVERED    ProposalDeliveryStatus = 2
	ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_ACKNOWLEDGED ProposalDeliveryStatus = 3
	ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_FAILED       ProposalDeliveryStatus = 4
)

// Enum value maps for ProposalDeliveryStatus.
var (
	ProposalDeliveryStatus_name = map[int32]string{
		0: "PROPOSAL_DELIVERY_STATUS_UNSPECIFIED",
		1: "PROPOSAL_DELIVERY_STATUS_PENDING",
		2: "PROPOSAL_DELIVERY_STATUS_DELIVERED",
		3: "PROPOSAL_DELIVERY_STATUS_ACKNOWLEDGED",
		4: "PROPOSAL_DELIVERY_STATUS_FAILED",
	}
	ProposalDeliveryStatus_value = map[string]int32{
		"PROPOSAL_DELIVERY_STATUS_UNSPECIFIED":  0,
		"PROPOSAL_DELIVERY_STATUS_PENDING":      1,
		"PROPOSAL_DELIVERY_STATUS_DELIVERED":    2,
		"PROPOSAL_DELIVERY_STATUS_ACKNOWLEDGED": 3,
		"PROPOSAL_DELIVERY_STATUS_FAILED":       4,
	}
)

func (x ProposalDeliveryStatus) Enum() *ProposalDeliveryStatus {
	p := new(ProposalDeliveryStatus)
	*p = x
	return p
}

func (x ProposalDeliveryStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProposalDeliveryStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[3].Descriptor()
}

func (ProposalDeliveryStatus) Type() protoreflect.EnumType {
	return &file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes[3]
}

func (x ProposalDeliveryStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProposalDeliveryStatus.Descriptor instead.
func (ProposalDeliveryStatus) EnumDescriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{3}
}

type Chain struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ChainType              `protobuf:"varint,2,opt,name=type,proto3,enum=cfm.ChainType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chain) Reset() {
	*x = Chain{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{0}
}

func (x *Chain) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Chain) GetType() ChainType {
	if x != nil {
		return x.Type
	}
	return ChainType_CHAIN_TYPE_UNSPECIFIED
}

// An account on a specific blockchain
type Account struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChainType     ChainType              `protobuf:"varint,1,opt,name=chain_type,json=chainType,proto3,enum=cfm.ChainType" json:"chain_type,omitempty"`
	ChainId       string                 `protobuf:"bytes,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Address       string                 `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetChainType() ChainType {
	if x != nil {
		return x.ChainType
	}
	return ChainType_CHAIN_TYPE_UNSPECIFIED
}

func (x *Account) GetChainId() string {
	if x != nil {
		return x.ChainId
	}
	return ""
}

func (x *Account) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

// The config for Flux Monitor on a specific chain
type FluxMonitorConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enabled       bool                   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FluxMonitorConfig) Reset() {
	*x = FluxMonitorConfig{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FluxMonitorConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FluxMonitorConfig) ProtoMessage() {}

func (x *FluxMonitorConfig) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FluxMonitorConfig.ProtoReflect.Descriptor instead.
func (*FluxMonitorConfig) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{2}
}

func (x *FluxMonitorConfig) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

// The config for OCR1 on a specific chain
type OCR1Config struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Enabled       bool                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsBootstrap   bool                     `protobuf:"varint,2,opt,name=is_bootstrap,json=isBootstrap,proto3" json:"is_bootstrap,omitempty"`
	P2PKeyBundle  *OCR1Config_P2PKeyBundle `protobuf:"bytes,3,opt,name=p2p_key_bundle,json=p2pKeyBundle,proto3" json:"p2p_key_bundle,omitempty"`
	OcrKeyBundle  *OCR1Config_OCRKeyBundle `protobuf:"bytes,4,opt,name=ocr_key_bundle,json=ocrKeyBundle,proto3" json:"ocr_key_bundle,omitempty"`
	Multiaddr     string                   `protobuf:"bytes,5,opt,name=multiaddr,proto3" json:"multiaddr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR1Config) Reset() {
	*x = OCR1Config{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config) ProtoMessage() {}

func (x *OCR1Config) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config.ProtoReflect.Descriptor instead.
func (*OCR1Config) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{3}
}

func (x *OCR1Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OCR1Config) GetIsBootstrap() bool {
	if x != nil {
		return x.IsBootstrap
	}
	return false
}

func (x *OCR1Config) GetP2PKeyBundle() *OCR1Config_P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundle
	}
	return nil
}

func (x *OCR1Config) GetOcrKeyBundle() *OCR1Config_OCRKeyBundle {
	if x != nil {
		return x.OcrKeyBundle
	}
	return nil
}

func (x *OCR1Config) GetMultiaddr() string {
	if x != nil {
		return x.Multiaddr
	}
	return ""
}

// The config for OCR2 on a specific chain
type OCR2Config struct {
	state            protoimpl.MessageState   `protogen:"open.v1"`
	Enabled          bool                     `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	IsBootstrap      bool                     `protobuf:"varint,2,opt,name=is_bootstrap,json=isBootstrap,proto3" json:"is_bootstrap,omitempty"`
	P2PKeyBundle     *OCR2Config_P2PKeyBundle `protobuf:"bytes,3,opt,name=p2p_key_bundle,json=p2pKeyBundle,proto3" json:"p2p_key_bundle,omitempty"`
	OcrKeyBundle     *OCR2Config_OCRKeyBundle `protobuf:"bytes,4,opt,name=ocr_key_bundle,json=ocrKeyBundle,proto3" json:"ocr_key_bundle,omitempty"`
	Multiaddr        string                   `protobuf:"bytes,5,opt,name=multiaddr,proto3" json:"multiaddr,omitempty"`
	Plugins          *OCR2Config_Plugins      `protobuf:"bytes,6,opt,name=plugins,proto3" json:"plugins,omitempty"`
	ForwarderAddress *string                  `protobuf:"bytes,7,opt,name=forwarder_address,json=forwarderAddress,proto3,oneof" json:"forwarder_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *OCR2Config) Reset() {
	*x = OCR2Config{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config) ProtoMessage() {}

func (x *OCR2Config) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config.ProtoReflect.Descriptor instead.
func (*OCR2Config) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{4}
}

func (x *OCR2Config) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *OCR2Config) GetIsBootstrap() bool {
	if x != nil {
		return x.IsBootstrap
	}
	return false
}

func (x *OCR2Config) GetP2PKeyBundle() *OCR2Config_P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundle
	}
	return nil
}

func (x *OCR2Config) GetOcrKeyBundle() *OCR2Config_OCRKeyBundle {
	if x != nil {
		return x.OcrKeyBundle
	}
	return nil
}

func (x *OCR2Config) GetMultiaddr() string {
	if x != nil {
		return x.Multiaddr
	}
	return ""
}

func (x *OCR2Config) GetPlugins() *OCR2Config_Plugins {
	if x != nil {
		return x.Plugins
	}
	return nil
}

func (x *OCR2Config) GetForwarderAddress() string {
	if x != nil && x.ForwarderAddress != nil {
		return *x.ForwarderAddress
	}
	return ""
}

type ChainConfig struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Chain             *Chain                 `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	AccountAddress    string                 `protobuf:"bytes,2,opt,name=account_address,json=accountAddress,proto3" json:"account_address,omitempty"`
	AdminAddress      string                 `protobuf:"bytes,3,opt,name=admin_address,json=adminAddress,proto3" json:"admin_address,omitempty"`
	FluxMonitorConfig *FluxMonitorConfig     `protobuf:"bytes,4,opt,name=flux_monitor_config,json=fluxMonitorConfig,proto3" json:"flux_monitor_config,omitempty"`
	Ocr1Config        *OCR1Config            `protobuf:"bytes,5,opt,name=ocr1_config,json=ocr1Config,proto3" json:"ocr1_config,omitempty"`
	Ocr2Config        *OCR2Config            `protobuf:"bytes,6,opt,name=ocr2_config,json=ocr2Config,proto3" json:"ocr2_config,omitempty"`
	// For EVM chains, we do not need this value and it is kept in the node's
	// keystore. For starknet, because the wallet address needs to be deployed
	// using this value and this pub key needs to be passed into the starknet
	// relayer, we request the node to send this directly to CLO.
	AccountAddressPublicKey *string `protobuf:"bytes,7,opt,name=account_address_public_key,json=accountAddressPublicKey,proto3,oneof" json:"account_address_public_key,omitempty"`
	unknownFields           protoimpl.UnknownFields
	sizeCache               protoimpl.SizeCache
}

func (x *ChainConfig) Reset() {
	*x = ChainConfig{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfig) ProtoMessage() {}

func (x *ChainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfig.ProtoReflect.Descriptor instead.
func (*ChainConfig) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{5}
}

func (x *ChainConfig) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *ChainConfig) GetAccountAddress() string {
	if x != nil {
		return x.AccountAddress
	}
	return ""
}

func (x *ChainConfig) GetAdminAddress() string {
	if x != nil {
		return x.AdminAddress
	}
	return ""
}

func (x *ChainConfig) GetFluxMonitorConfig() *FluxMonitorConfig {
	if x != nil {
		return x.FluxMonitorConfig
	}
	return nil
}

func (x *ChainConfig) GetOcr1Config() *OCR1Config {
	if x != nil {
		return x.Ocr1Config
	}
	return nil
}

func (x *ChainConfig) GetOcr2Config() *OCR2Config {
	if x != nil {
		return x.Ocr2Config
	}
	return nil
}

func (x *ChainConfig) GetAccountAddressPublicKey() string {
	if x != nil && x.AccountAddressPublicKey != nil {
		return *x.AccountAddressPublicKey
	}
	return ""
}

type UpdateNodeRequest struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	JobTypes           []JobType              `protobuf:"varint,1,rep,packed,name=job_types,json=jobTypes,proto3,enum=cfm.JobType" json:"job_types,omitempty"`
	ChainId            int64                  `protobuf:"varint,2,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"` // To be removed when all nodes are upgraded to 1.2
	AccountAddresses   []string               `protobuf:"bytes,3,rep,name=account_addresses,json=accountAddresses,proto3" json:"account_addresses,omitempty"`
	IsBootstrapPeer    bool                   `protobuf:"varint,4,opt,name=is_bootstrap_peer,json=isBootstrapPeer,proto3" json:"is_bootstrap_peer,omitempty"`
	BootstrapMultiaddr string                 `protobuf:"bytes,5,opt,name=bootstrap_multiaddr,json=bootstrapMultiaddr,proto3" json:"bootstrap_multiaddr,omitempty"`
	Version            string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`
	ChainIds           []int64                `protobuf:"varint,7,rep,packed,name=chain_ids,json=chainIds,proto3" json:"chain_ids,omitempty"`
	Accounts           []*Account             `protobuf:"bytes,8,rep,name=accounts,proto3" json:"accounts,omitempty"`
	Chains             []*Chain               `protobuf:"bytes,9,rep,name=chains,proto3" json:"chains,omitempty"`
	ChainConfigs       []*ChainConfig         `protobuf:"bytes,10,rep,name=chain_configs,json=chainConfigs,proto3" json:"chain_configs,omitempty"`
	WorkflowKey        *string                `protobuf:"bytes,11,opt,name=workflow_key,json=workflowKey,proto3,oneof" json:"workflow_key,omitempty"`
	P2PKeyBundles      []*P2PKeyBundle        `protobuf:"bytes,12,rep,name=p2p_key_bundles,json=p2pKeyBundles,proto3" json:"p2p_key_bundles,omitempty"`
	NopFriendlyName    string                 `protobuf:"bytes,13,opt,name=nop_friendly_name,json=nopFriendlyName,proto3" json:"nop_friendly_name,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateNodeRequest) GetJobTypes() []JobType {
	if x != nil {
		return x.JobTypes
	}
	return nil
}

func (x *UpdateNodeRequest) GetChainId() int64 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *UpdateNodeRequest) GetAccountAddresses() []string {
	if x != nil {
		return x.AccountAddresses
	}
	return nil
}

func (x *UpdateNodeRequest) GetIsBootstrapPeer() bool {
	if x != nil {
		return x.IsBootstrapPeer
	}
	return false
}

func (x *UpdateNodeRequest) GetBootstrapMultiaddr() string {
	if x != nil {
		return x.BootstrapMultiaddr
	}
	return ""
}

func (x *UpdateNodeRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UpdateNodeRequest) GetChainIds() []int64 {
	if x != nil {
		return x.ChainIds
	}
	return nil
}

func (x *UpdateNodeRequest) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *UpdateNodeRequest) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

func (x *UpdateNodeRequest) GetChainConfigs() []*ChainConfig {
	if x != nil {
		return x.ChainConfigs
	}
	return nil
}

func (x *UpdateNodeRequest) GetWorkflowKey() string {
	if x != nil && x.WorkflowKey != nil {
		return *x.WorkflowKey
	}
	return ""
}

func (x *UpdateNodeRequest) GetP2PKeyBundles() []*P2PKeyBundle {
	if x != nil {
		return x.P2PKeyBundles
	}
	return nil
}

func (x *UpdateNodeRequest) GetNopFriendlyName() string {
	if x != nil {
		return x.NopFriendlyName
	}
	return ""
}

type UpdateNodeResponse struct {
	state             protoimpl.MessageState       `protogen:"open.v1"`
	ChainConfigErrors map[string]*ChainConfigError `protobuf:"bytes,1,rep,name=chain_config_errors,json=chainConfigErrors,proto3" json:"chain_config_errors,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *UpdateNodeResponse) Reset() {
	*x = UpdateNodeResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResponse) ProtoMessage() {}

func (x *UpdateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateNodeResponse) GetChainConfigErrors() map[string]*ChainConfigError {
	if x != nil {
		return x.ChainConfigErrors
	}
	return nil
}

type ChainConfigError struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChainConfigError) Reset() {
	*x = ChainConfigError{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChainConfigError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainConfigError) ProtoMessage() {}

func (x *ChainConfigError) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainConfigError.ProtoReflect.Descriptor instead.
func (*ChainConfigError) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{8}
}

func (x *ChainConfigError) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ApprovedJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApprovedJobRequest) Reset() {
	*x = ApprovedJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovedJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovedJobRequest) ProtoMessage() {}

func (x *ApprovedJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovedJobRequest.ProtoReflect.Descriptor instead.
func (*ApprovedJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{9}
}

func (x *ApprovedJobRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ApprovedJobRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ApprovedJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApprovedJobResponse) Reset() {
	*x = ApprovedJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApprovedJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovedJobResponse) ProtoMessage() {}

func (x *ApprovedJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovedJobResponse.ProtoReflect.Descriptor instead.
func (*ApprovedJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{10}
}

type HealthcheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthcheckRequest) Reset() {
	*x = HealthcheckRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthcheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthcheckRequest) ProtoMessage() {}

func (x *HealthcheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthcheckRequest.ProtoReflect.Descriptor instead.
func (*HealthcheckRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{11}
}

type HealthcheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthcheckResponse) Reset() {
	*x = HealthcheckResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthcheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthcheckResponse) ProtoMessage() {}

func (x *HealthcheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthcheckResponse.ProtoReflect.Descriptor instead.
func (*HealthcheckResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{12}
}

type RejectedJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectedJobRequest) Reset() {
	*x = RejectedJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectedJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedJobRequest) ProtoMessage() {}

func (x *RejectedJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedJobRequest.ProtoReflect.Descriptor instead.
func (*RejectedJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{13}
}

func (x *RejectedJobRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *RejectedJobRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type RejectedJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RejectedJobResponse) Reset() {
	*x = RejectedJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RejectedJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RejectedJobResponse) ProtoMessage() {}

func (x *RejectedJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RejectedJobResponse.ProtoReflect.Descriptor instead.
func (*RejectedJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{14}
}

type CancelledJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Version       int64                  `protobuf:"varint,2,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelledJobRequest) Reset() {
	*x = CancelledJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelledJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelledJobRequest) ProtoMessage() {}

func (x *CancelledJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelledJobRequest.ProtoReflect.Descriptor instead.
func (*CancelledJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{15}
}

func (x *CancelledJobRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CancelledJobRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type CancelledJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelledJobResponse) Reset() {
	*x = CancelledJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelledJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelledJobResponse) ProtoMessage() {}

func (x *CancelledJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelledJobResponse.ProtoReflect.Descriptor instead.
func (*CancelledJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{16}
}

type TransferJobRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                  // Remote UUID of the job to transfer
	SourceManagerPubKey string                 `protobuf:"bytes,2,opt,name=source_manager_pub_key,json=sourceManagerPubKey,proto3" json:"source_manager_pub_key,omitempty"` // Public key of the source feeds manager
	Labels              []*Label               `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`                                                          // Set of labels associated with the job.
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *TransferJobRequest) Reset() {
	*x = TransferJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferJobRequest) ProtoMessage() {}

func (x *TransferJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferJobRequest.ProtoReflect.Descriptor instead.
func (*TransferJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{17}
}

func (x *TransferJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransferJobRequest) GetSourceManagerPubKey() string {
	if x != nil {
		return x.SourceManagerPubKey
	}
	return ""
}

func (x *TransferJobRequest) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

type TransferJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferJobResponse) Reset() {
	*x = TransferJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferJobResponse) ProtoMessage() {}

func (x *TransferJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferJobResponse.ProtoReflect.Descriptor instead.
func (*TransferJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{18}
}

func (x *TransferJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ProposeJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Spec          string                 `protobuf:"bytes,2,opt,name=spec,proto3" json:"spec,omitempty"`
	Multiaddrs    []string               `protobuf:"bytes,3,rep,name=multiaddrs,proto3" json:"multiaddrs,omitempty"`
	Version       int64                  `protobuf:"varint,4,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeJobRequest) Reset() {
	*x = ProposeJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeJobRequest) ProtoMessage() {}

func (x *ProposeJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeJobRequest.ProtoReflect.Descriptor instead.
func (*ProposeJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{19}
}

func (x *ProposeJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProposeJobRequest) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *ProposeJobRequest) GetMultiaddrs() []string {
	if x != nil {
		return x.Multiaddrs
	}
	return nil
}

func (x *ProposeJobRequest) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

type ProposeJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProposeJobResponse) Reset() {
	*x = ProposeJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProposeJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProposeJobResponse) ProtoMessage() {}

func (x *ProposeJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProposeJobResponse.ProtoReflect.Descriptor instead.
func (*ProposeJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{20}
}

func (x *ProposeJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobResponse) Reset() {
	*x = DeleteJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResponse) ProtoMessage() {}

func (x *DeleteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevokeJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeJobRequest) Reset() {
	*x = RevokeJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeJobRequest) ProtoMessage() {}

func (x *RevokeJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeJobRequest.ProtoReflect.Descriptor instead.
func (*RevokeJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{23}
}

func (x *RevokeJobRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type RevokeJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeJobResponse) Reset() {
	*x = RevokeJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeJobResponse) ProtoMessage() {}

func (x *RevokeJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeJobResponse.ProtoReflect.Descriptor instead.
func (*RevokeJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{24}
}

func (x *RevokeJobResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *P2PKeyBundle) Reset() {
	*x = P2PKeyBundle{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PKeyBundle) ProtoMessage() {}

func (x *P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{25}
}

func (x *P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type Label struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Label) Reset() {
	*x = Label{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Label) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Label) ProtoMessage() {}

func (x *Label) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Label.ProtoReflect.Descriptor instead.
func (*Label) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{26}
}

func (x *Label) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Label) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`                               // Job UUID
	OriginalId    string                 `protobuf:"bytes,2,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"` // Job original ID
	Labels        []*Label               `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty"`                           // Set of labels associated with the job.
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{27}
}

func (x *Job) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Job) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *Job) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Job) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Job) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Proposal struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	OriginalId     string                 `protobuf:"bytes,1,opt,name=original_id,json=originalId,proto3" json:"original_id,omitempty"`                                              // Proposal original reference ID
	Revision       int64                  `protobuf:"varint,2,opt,name=revision,proto3" json:"revision,omitempty"`                                                                   // Proposal revision number
	Status         ProposalStatus         `protobuf:"varint,3,opt,name=status,proto3,enum=cfm.ProposalStatus" json:"status,omitempty"`                                               // Proposal status
	DeliveryStatus ProposalDeliveryStatus `protobuf:"varint,4,opt,name=delivery_status,json=deliveryStatus,proto3,enum=cfm.ProposalDeliveryStatus" json:"delivery_status,omitempty"` // Delivery status
	OriginalJobId  string                 `protobuf:"bytes,5,opt,name=original_job_id,json=originalJobId,proto3" json:"original_job_id,omitempty"`                                   // Job reference ID
	Spec           string                 `protobuf:"bytes,6,opt,name=spec,proto3" json:"spec,omitempty"`                                                                            // Job spec
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Proposal) Reset() {
	*x = Proposal{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proposal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proposal) ProtoMessage() {}

func (x *Proposal) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proposal.ProtoReflect.Descriptor instead.
func (*Proposal) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{28}
}

func (x *Proposal) GetOriginalId() string {
	if x != nil {
		return x.OriginalId
	}
	return ""
}

func (x *Proposal) GetRevision() int64 {
	if x != nil {
		return x.Revision
	}
	return 0
}

func (x *Proposal) GetStatus() ProposalStatus {
	if x != nil {
		return x.Status
	}
	return ProposalStatus_PROPOSAL_STATUS_UNSPECIFIED
}

func (x *Proposal) GetDeliveryStatus() ProposalDeliveryStatus {
	if x != nil {
		return x.DeliveryStatus
	}
	return ProposalDeliveryStatus_PROPOSAL_DELIVERY_STATUS_UNSPECIFIED
}

func (x *Proposal) GetOriginalJobId() string {
	if x != nil {
		return x.OriginalJobId
	}
	return ""
}

func (x *Proposal) GetSpec() string {
	if x != nil {
		return x.Spec
	}
	return ""
}

func (x *Proposal) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Proposal) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// Request message for transferring a complete job with all proposals
type TransferedJobRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Job details to be transferred
	Job *Job `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	// All job proposals
	Proposals     []*Proposal `protobuf:"bytes,2,rep,name=proposals,proto3" json:"proposals,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferedJobRequest) Reset() {
	*x = TransferedJobRequest{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferedJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferedJobRequest) ProtoMessage() {}

func (x *TransferedJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferedJobRequest.ProtoReflect.Descriptor instead.
func (*TransferedJobRequest) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{29}
}

func (x *TransferedJobRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *TransferedJobRequest) GetProposals() []*Proposal {
	if x != nil {
		return x.Proposals
	}
	return nil
}

// Response message for the transfer operation
type TransferedJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransferedJobResponse) Reset() {
	*x = TransferedJobResponse{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransferedJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferedJobResponse) ProtoMessage() {}

func (x *TransferedJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferedJobResponse.ProtoReflect.Descriptor instead.
func (*TransferedJobResponse) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{30}
}

type OCR1Config_P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR1Config_P2PKeyBundle) Reset() {
	*x = OCR1Config_P2PKeyBundle{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config_P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config_P2PKeyBundle) ProtoMessage() {}

func (x *OCR1Config_P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config_P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR1Config_P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{3, 0}
}

func (x *OCR1Config_P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *OCR1Config_P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type OCR1Config_OCRKeyBundle struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BundleId              string                 `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	ConfigPublicKey       string                 `protobuf:"bytes,2,opt,name=config_public_key,json=configPublicKey,proto3" json:"config_public_key,omitempty"`
	OffchainPublicKey     string                 `protobuf:"bytes,3,opt,name=offchain_public_key,json=offchainPublicKey,proto3" json:"offchain_public_key,omitempty"`
	OnchainSigningAddress string                 `protobuf:"bytes,4,opt,name=onchain_signing_address,json=onchainSigningAddress,proto3" json:"onchain_signing_address,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OCR1Config_OCRKeyBundle) Reset() {
	*x = OCR1Config_OCRKeyBundle{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR1Config_OCRKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR1Config_OCRKeyBundle) ProtoMessage() {}

func (x *OCR1Config_OCRKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR1Config_OCRKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR1Config_OCRKeyBundle) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{3, 1}
}

func (x *OCR1Config_OCRKeyBundle) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetConfigPublicKey() string {
	if x != nil {
		return x.ConfigPublicKey
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetOffchainPublicKey() string {
	if x != nil {
		return x.OffchainPublicKey
	}
	return ""
}

func (x *OCR1Config_OCRKeyBundle) GetOnchainSigningAddress() string {
	if x != nil {
		return x.OnchainSigningAddress
	}
	return ""
}

type OCR2Config_P2PKeyBundle struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PeerId        string                 `protobuf:"bytes,1,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	PublicKey     string                 `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR2Config_P2PKeyBundle) Reset() {
	*x = OCR2Config_P2PKeyBundle{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_P2PKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_P2PKeyBundle) ProtoMessage() {}

func (x *OCR2Config_P2PKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_P2PKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR2Config_P2PKeyBundle) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{4, 0}
}

func (x *OCR2Config_P2PKeyBundle) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *OCR2Config_P2PKeyBundle) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

type OCR2Config_OCRKeyBundle struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	BundleId              string                 `protobuf:"bytes,1,opt,name=bundle_id,json=bundleId,proto3" json:"bundle_id,omitempty"`
	ConfigPublicKey       string                 `protobuf:"bytes,2,opt,name=config_public_key,json=configPublicKey,proto3" json:"config_public_key,omitempty"`
	OffchainPublicKey     string                 `protobuf:"bytes,3,opt,name=offchain_public_key,json=offchainPublicKey,proto3" json:"offchain_public_key,omitempty"`
	OnchainSigningAddress string                 `protobuf:"bytes,4,opt,name=onchain_signing_address,json=onchainSigningAddress,proto3" json:"onchain_signing_address,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *OCR2Config_OCRKeyBundle) Reset() {
	*x = OCR2Config_OCRKeyBundle{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_OCRKeyBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_OCRKeyBundle) ProtoMessage() {}

func (x *OCR2Config_OCRKeyBundle) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_OCRKeyBundle.ProtoReflect.Descriptor instead.
func (*OCR2Config_OCRKeyBundle) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{4, 1}
}

func (x *OCR2Config_OCRKeyBundle) GetBundleId() string {
	if x != nil {
		return x.BundleId
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetConfigPublicKey() string {
	if x != nil {
		return x.ConfigPublicKey
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetOffchainPublicKey() string {
	if x != nil {
		return x.OffchainPublicKey
	}
	return ""
}

func (x *OCR2Config_OCRKeyBundle) GetOnchainSigningAddress() string {
	if x != nil {
		return x.OnchainSigningAddress
	}
	return ""
}

type OCR2Config_Plugins struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Commit        bool                   `protobuf:"varint,1,opt,name=commit,proto3" json:"commit,omitempty"`
	Execute       bool                   `protobuf:"varint,2,opt,name=execute,proto3" json:"execute,omitempty"`
	Median        bool                   `protobuf:"varint,3,opt,name=median,proto3" json:"median,omitempty"`
	Mercury       bool                   `protobuf:"varint,4,opt,name=mercury,proto3" json:"mercury,omitempty"`
	Rebalancer    bool                   `protobuf:"varint,5,opt,name=rebalancer,proto3" json:"rebalancer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OCR2Config_Plugins) Reset() {
	*x = OCR2Config_Plugins{}
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OCR2Config_Plugins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OCR2Config_Plugins) ProtoMessage() {}

func (x *OCR2Config_Plugins) ProtoReflect() protoreflect.Message {
	mi := &file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OCR2Config_Plugins.ProtoReflect.Descriptor instead.
func (*OCR2Config_Plugins) Descriptor() ([]byte, []int) {
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP(), []int{4, 2}
}

func (x *OCR2Config_Plugins) GetCommit() bool {
	if x != nil {
		return x.Commit
	}
	return false
}

func (x *OCR2Config_Plugins) GetExecute() bool {
	if x != nil {
		return x.Execute
	}
	return false
}

func (x *OCR2Config_Plugins) GetMedian() bool {
	if x != nil {
		return x.Median
	}
	return false
}

func (x *OCR2Config_Plugins) GetMercury() bool {
	if x != nil {
		return x.Mercury
	}
	return false
}

func (x *OCR2Config_Plugins) GetRebalancer() bool {
	if x != nil {
		return x.Rebalancer
	}
	return false
}

var File_orchestrator_feedsmanager_feedsmanager_proto protoreflect.FileDescriptor

const file_orchestrator_feedsmanager_feedsmanager_proto_rawDesc = "" +
	"\n" +
	",orchestrator/feedsmanager/feedsmanager.proto\x12\x03cfm\x1a\x1fgoogle/protobuf/timestamp.proto\";\n" +
	"\x05Chain\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\"\n" +
	"\x04type\x18\x02 \x01(\x0e2\x0e.cfm.ChainTypeR\x04type\"m\n" +
	"\aAccount\x12-\n" +
	"\n" +
	"chain_type\x18\x01 \x01(\x0e2\x0e.cfm.ChainTypeR\tchainType\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\tR\achainId\x12\x18\n" +
	"\aaddress\x18\x03 \x01(\tR\aaddress\"-\n" +
	"\x11FluxMonitorConfig\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\"\xf9\x03\n" +
	"\n" +
	"OCR1Config\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12!\n" +
	"\fis_bootstrap\x18\x02 \x01(\bR\visBootstrap\x12B\n" +
	"\x0ep2p_key_bundle\x18\x03 \x01(\v2\x1c.cfm.OCR1Config.P2PKeyBundleR\fp2pKeyBundle\x12B\n" +
	"\x0eocr_key_bundle\x18\x04 \x01(\v2\x1c.cfm.OCR1Config.OCRKeyBundleR\focrKeyBundle\x12\x1c\n" +
	"\tmultiaddr\x18\x05 \x01(\tR\tmultiaddr\x1aF\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x1a\xbf\x01\n" +
	"\fOCRKeyBundle\x12\x1b\n" +
	"\tbundle_id\x18\x01 \x01(\tR\bbundleId\x12*\n" +
	"\x11config_public_key\x18\x02 \x01(\tR\x0fconfigPublicKey\x12.\n" +
	"\x13offchain_public_key\x18\x03 \x01(\tR\x11offchainPublicKey\x126\n" +
	"\x17onchain_signing_address\x18\x04 \x01(\tR\x15onchainSigningAddress\"\x84\x06\n" +
	"\n" +
	"OCR2Config\x12\x18\n" +
	"\aenabled\x18\x01 \x01(\bR\aenabled\x12!\n" +
	"\fis_bootstrap\x18\x02 \x01(\bR\visBootstrap\x12B\n" +
	"\x0ep2p_key_bundle\x18\x03 \x01(\v2\x1c.cfm.OCR2Config.P2PKeyBundleR\fp2pKeyBundle\x12B\n" +
	"\x0eocr_key_bundle\x18\x04 \x01(\v2\x1c.cfm.OCR2Config.OCRKeyBundleR\focrKeyBundle\x12\x1c\n" +
	"\tmultiaddr\x18\x05 \x01(\tR\tmultiaddr\x121\n" +
	"\aplugins\x18\x06 \x01(\v2\x17.cfm.OCR2Config.PluginsR\aplugins\x120\n" +
	"\x11forwarder_address\x18\a \x01(\tH\x00R\x10forwarderAddress\x88\x01\x01\x1aF\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\x1a\xbf\x01\n" +
	"\fOCRKeyBundle\x12\x1b\n" +
	"\tbundle_id\x18\x01 \x01(\tR\bbundleId\x12*\n" +
	"\x11config_public_key\x18\x02 \x01(\tR\x0fconfigPublicKey\x12.\n" +
	"\x13offchain_public_key\x18\x03 \x01(\tR\x11offchainPublicKey\x126\n" +
	"\x17onchain_signing_address\x18\x04 \x01(\tR\x15onchainSigningAddress\x1a\x8d\x01\n" +
	"\aPlugins\x12\x16\n" +
	"\x06commit\x18\x01 \x01(\bR\x06commit\x12\x18\n" +
	"\aexecute\x18\x02 \x01(\bR\aexecute\x12\x16\n" +
	"\x06median\x18\x03 \x01(\bR\x06median\x12\x18\n" +
	"\amercury\x18\x04 \x01(\bR\amercury\x12\x1e\n" +
	"\n" +
	"rebalancer\x18\x05 \x01(\bR\n" +
	"rebalancerB\x14\n" +
	"\x12_forwarder_address\"\x8a\x03\n" +
	"\vChainConfig\x12 \n" +
	"\x05chain\x18\x01 \x01(\v2\n" +
	".cfm.ChainR\x05chain\x12'\n" +
	"\x0faccount_address\x18\x02 \x01(\tR\x0eaccountAddress\x12#\n" +
	"\radmin_address\x18\x03 \x01(\tR\fadminAddress\x12F\n" +
	"\x13flux_monitor_config\x18\x04 \x01(\v2\x16.cfm.FluxMonitorConfigR\x11fluxMonitorConfig\x120\n" +
	"\vocr1_config\x18\x05 \x01(\v2\x0f.cfm.OCR1ConfigR\n" +
	"ocr1Config\x120\n" +
	"\vocr2_config\x18\x06 \x01(\v2\x0f.cfm.OCR2ConfigR\n" +
	"ocr2Config\x12@\n" +
	"\x1aaccount_address_public_key\x18\a \x01(\tH\x00R\x17accountAddressPublicKey\x88\x01\x01B\x1d\n" +
	"\x1b_account_address_public_key\"\xbf\x04\n" +
	"\x11UpdateNodeRequest\x12)\n" +
	"\tjob_types\x18\x01 \x03(\x0e2\f.cfm.JobTypeR\bjobTypes\x12\x19\n" +
	"\bchain_id\x18\x02 \x01(\x03R\achainId\x12+\n" +
	"\x11account_addresses\x18\x03 \x03(\tR\x10accountAddresses\x12*\n" +
	"\x11is_bootstrap_peer\x18\x04 \x01(\bR\x0fisBootstrapPeer\x12/\n" +
	"\x13bootstrap_multiaddr\x18\x05 \x01(\tR\x12bootstrapMultiaddr\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12\x1b\n" +
	"\tchain_ids\x18\a \x03(\x03R\bchainIds\x12(\n" +
	"\baccounts\x18\b \x03(\v2\f.cfm.AccountR\baccounts\x12\"\n" +
	"\x06chains\x18\t \x03(\v2\n" +
	".cfm.ChainR\x06chains\x125\n" +
	"\rchain_configs\x18\n" +
	" \x03(\v2\x10.cfm.ChainConfigR\fchainConfigs\x12&\n" +
	"\fworkflow_key\x18\v \x01(\tH\x00R\vworkflowKey\x88\x01\x01\x129\n" +
	"\x0fp2p_key_bundles\x18\f \x03(\v2\x11.cfm.P2PKeyBundleR\rp2pKeyBundles\x12*\n" +
	"\x11nop_friendly_name\x18\r \x01(\tR\x0fnopFriendlyNameB\x0f\n" +
	"\r_workflow_key\"\xd1\x01\n" +
	"\x12UpdateNodeResponse\x12^\n" +
	"\x13chain_config_errors\x18\x01 \x03(\v2..cfm.UpdateNodeResponse.ChainConfigErrorsEntryR\x11chainConfigErrors\x1a[\n" +
	"\x16ChainConfigErrorsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12+\n" +
	"\x05value\x18\x02 \x01(\v2\x15.cfm.ChainConfigErrorR\x05value:\x028\x01\",\n" +
	"\x10ChainConfigError\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"B\n" +
	"\x12ApprovedJobRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"\x15\n" +
	"\x13ApprovedJobResponse\"\x14\n" +
	"\x12HealthcheckRequest\"\x15\n" +
	"\x13HealthcheckResponse\"B\n" +
	"\x12RejectedJobRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"\x15\n" +
	"\x13RejectedJobResponse\"C\n" +
	"\x13CancelledJobRequest\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x18\n" +
	"\aversion\x18\x02 \x01(\x03R\aversion\"\x16\n" +
	"\x14CancelledJobResponse\"}\n" +
	"\x12TransferJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x123\n" +
	"\x16source_manager_pub_key\x18\x02 \x01(\tR\x13sourceManagerPubKey\x12\"\n" +
	"\x06labels\x18\x03 \x03(\v2\n" +
	".cfm.LabelR\x06labels\"%\n" +
	"\x13TransferJobResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"q\n" +
	"\x11ProposeJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04spec\x18\x02 \x01(\tR\x04spec\x12\x1e\n" +
	"\n" +
	"multiaddrs\x18\x03 \x03(\tR\n" +
	"multiaddrs\x12\x18\n" +
	"\aversion\x18\x04 \x01(\x03R\aversion\"$\n" +
	"\x12ProposeJobResponse\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"\"\n" +
	"\x10DeleteJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"#\n" +
	"\x11DeleteJobResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10RevokeJobRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"#\n" +
	"\x11RevokeJobResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"F\n" +
	"\fP2PKeyBundle\x12\x17\n" +
	"\apeer_id\x18\x01 \x01(\tR\x06peerId\x12\x1d\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tR\tpublicKey\">\n" +
	"\x05Label\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x00R\x05value\x88\x01\x01B\b\n" +
	"\x06_value\"\xd4\x01\n" +
	"\x03Job\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12\x1f\n" +
	"\voriginal_id\x18\x02 \x01(\tR\n" +
	"originalId\x12\"\n" +
	"\x06labels\x18\x03 \x03(\v2\n" +
	".cfm.LabelR\x06labels\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xec\x02\n" +
	"\bProposal\x12\x1f\n" +
	"\voriginal_id\x18\x01 \x01(\tR\n" +
	"originalId\x12\x1a\n" +
	"\brevision\x18\x02 \x01(\x03R\brevision\x12+\n" +
	"\x06status\x18\x03 \x01(\x0e2\x13.cfm.ProposalStatusR\x06status\x12D\n" +
	"\x0fdelivery_status\x18\x04 \x01(\x0e2\x1b.cfm.ProposalDeliveryStatusR\x0edeliveryStatus\x12&\n" +
	"\x0foriginal_job_id\x18\x05 \x01(\tR\roriginalJobId\x12\x12\n" +
	"\x04spec\x18\x06 \x01(\tR\x04spec\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"_\n" +
	"\x14TransferedJobRequest\x12\x1a\n" +
	"\x03job\x18\x01 \x01(\v2\b.cfm.JobR\x03job\x12+\n" +
	"\tproposals\x18\x02 \x03(\v2\r.cfm.ProposalR\tproposals\"\x17\n" +
	"\x15TransferedJobResponse*c\n" +
	"\aJobType\x12\x18\n" +
	"\x14JOB_TYPE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15JOB_TYPE_FLUX_MONITOR\x10\x01\x12\x10\n" +
	"\fJOB_TYPE_OCR\x10\x02\x12\x11\n" +
	"\rJOB_TYPE_OCR2\x10\x03*\xbe\x01\n" +
	"\tChainType\x12\x1a\n" +
	"\x16CHAIN_TYPE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eCHAIN_TYPE_EVM\x10\x01\x12\x15\n" +
	"\x11CHAIN_TYPE_SOLANA\x10\x02\x12\x17\n" +
	"\x13CHAIN_TYPE_STARKNET\x10\x03\x12\x14\n" +
	"\x10CHAIN_TYPE_APTOS\x10\x04\x12\x13\n" +
	"\x0fCHAIN_TYPE_TRON\x10\x05\x12\x12\n" +
	"\x0eCHAIN_TYPE_TON\x10\x06\x12\x12\n" +
	"\x0eCHAIN_TYPE_SUI\x10\a*\xc6\x01\n" +
	"\x0eProposalStatus\x12\x1f\n" +
	"\x1bPROPOSAL_STATUS_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17PROPOSAL_STATUS_PENDING\x10\x01\x12\x1c\n" +
	"\x18PROPOSAL_STATUS_APPROVED\x10\x02\x12\x1c\n" +
	"\x18PROPOSAL_STATUS_REJECTED\x10\x03\x12\x1d\n" +
	"\x19PROPOSAL_STATUS_CANCELLED\x10\x04\x12\x1b\n" +
	"\x17PROPOSAL_STATUS_REVOKED\x10\x05*\xe0\x01\n" +
	"\x16ProposalDeliveryStatus\x12(\n" +
	"$PROPOSAL_DELIVERY_STATUS_UNSPECIFIED\x10\x00\x12$\n" +
	" PROPOSAL_DELIVERY_STATUS_PENDING\x10\x01\x12&\n" +
	"\"PROPOSAL_DELIVERY_STATUS_DELIVERED\x10\x02\x12)\n" +
	"%PROPOSAL_DELIVERY_STATUS_ACKNOWLEDGED\x10\x03\x12#\n" +
	"\x1fPROPOSAL_DELIVERY_STATUS_FAILED\x10\x042\xa0\x03\n" +
	"\fFeedsManager\x12@\n" +
	"\vApprovedJob\x12\x17.cfm.ApprovedJobRequest\x1a\x18.cfm.ApprovedJobResponse\x12@\n" +
	"\vHealthcheck\x12\x17.cfm.HealthcheckRequest\x1a\x18.cfm.HealthcheckResponse\x12=\n" +
	"\n" +
	"UpdateNode\x12\x16.cfm.UpdateNodeRequest\x1a\x17.cfm.UpdateNodeResponse\x12@\n" +
	"\vRejectedJob\x12\x17.cfm.RejectedJobRequest\x1a\x18.cfm.RejectedJobResponse\x12C\n" +
	"\fCancelledJob\x12\x18.cfm.CancelledJobRequest\x1a\x19.cfm.CancelledJobResponse\x12F\n" +
	"\rTransferedJob\x12\x19.cfm.TransferedJobRequest\x1a\x1a.cfm.TransferedJobResponse2\x86\x02\n" +
	"\vNodeService\x12=\n" +
	"\n" +
	"ProposeJob\x12\x16.cfm.ProposeJobRequest\x1a\x17.cfm.ProposeJobResponse\x12:\n" +
	"\tDeleteJob\x12\x15.cfm.DeleteJobRequest\x1a\x16.cfm.DeleteJobResponse\x12:\n" +
	"\tRevokeJob\x12\x15.cfm.RevokeJobRequest\x1a\x16.cfm.RevokeJobResponse\x12@\n" +
	"\vTransferJob\x12\x17.cfm.TransferJobRequest\x1a\x18.cfm.TransferJobResponseBHZFgithub.com/smartcontractkit/chainlink-protos/orchestrator/feedsmanagerb\x06proto3"

var (
	file_orchestrator_feedsmanager_feedsmanager_proto_rawDescOnce sync.Once
	file_orchestrator_feedsmanager_feedsmanager_proto_rawDescData []byte
)

func file_orchestrator_feedsmanager_feedsmanager_proto_rawDescGZIP() []byte {
	file_orchestrator_feedsmanager_feedsmanager_proto_rawDescOnce.Do(func() {
		file_orchestrator_feedsmanager_feedsmanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_orchestrator_feedsmanager_feedsmanager_proto_rawDesc), len(file_orchestrator_feedsmanager_feedsmanager_proto_rawDesc)))
	})
	return file_orchestrator_feedsmanager_feedsmanager_proto_rawDescData
}

var file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_orchestrator_feedsmanager_feedsmanager_proto_goTypes = []any{
	(JobType)(0),                    // 0: cfm.JobType
	(ChainType)(0),                  // 1: cfm.ChainType
	(ProposalStatus)(0),             // 2: cfm.ProposalStatus
	(ProposalDeliveryStatus)(0),     // 3: cfm.ProposalDeliveryStatus
	(*Chain)(nil),                   // 4: cfm.Chain
	(*Account)(nil),                 // 5: cfm.Account
	(*FluxMonitorConfig)(nil),       // 6: cfm.FluxMonitorConfig
	(*OCR1Config)(nil),              // 7: cfm.OCR1Config
	(*OCR2Config)(nil),              // 8: cfm.OCR2Config
	(*ChainConfig)(nil),             // 9: cfm.ChainConfig
	(*UpdateNodeRequest)(nil),       // 10: cfm.UpdateNodeRequest
	(*UpdateNodeResponse)(nil),      // 11: cfm.UpdateNodeResponse
	(*ChainConfigError)(nil),        // 12: cfm.ChainConfigError
	(*ApprovedJobRequest)(nil),      // 13: cfm.ApprovedJobRequest
	(*ApprovedJobResponse)(nil),     // 14: cfm.ApprovedJobResponse
	(*HealthcheckRequest)(nil),      // 15: cfm.HealthcheckRequest
	(*HealthcheckResponse)(nil),     // 16: cfm.HealthcheckResponse
	(*RejectedJobRequest)(nil),      // 17: cfm.RejectedJobRequest
	(*RejectedJobResponse)(nil),     // 18: cfm.RejectedJobResponse
	(*CancelledJobRequest)(nil),     // 19: cfm.CancelledJobRequest
	(*CancelledJobResponse)(nil),    // 20: cfm.CancelledJobResponse
	(*TransferJobRequest)(nil),      // 21: cfm.TransferJobRequest
	(*TransferJobResponse)(nil),     // 22: cfm.TransferJobResponse
	(*ProposeJobRequest)(nil),       // 23: cfm.ProposeJobRequest
	(*ProposeJobResponse)(nil),      // 24: cfm.ProposeJobResponse
	(*DeleteJobRequest)(nil),        // 25: cfm.DeleteJobRequest
	(*DeleteJobResponse)(nil),       // 26: cfm.DeleteJobResponse
	(*RevokeJobRequest)(nil),        // 27: cfm.RevokeJobRequest
	(*RevokeJobResponse)(nil),       // 28: cfm.RevokeJobResponse
	(*P2PKeyBundle)(nil),            // 29: cfm.P2PKeyBundle
	(*Label)(nil),                   // 30: cfm.Label
	(*Job)(nil),                     // 31: cfm.Job
	(*Proposal)(nil),                // 32: cfm.Proposal
	(*TransferedJobRequest)(nil),    // 33: cfm.TransferedJobRequest
	(*TransferedJobResponse)(nil),   // 34: cfm.TransferedJobResponse
	(*OCR1Config_P2PKeyBundle)(nil), // 35: cfm.OCR1Config.P2PKeyBundle
	(*OCR1Config_OCRKeyBundle)(nil), // 36: cfm.OCR1Config.OCRKeyBundle
	(*OCR2Config_P2PKeyBundle)(nil), // 37: cfm.OCR2Config.P2PKeyBundle
	(*OCR2Config_OCRKeyBundle)(nil), // 38: cfm.OCR2Config.OCRKeyBundle
	(*OCR2Config_Plugins)(nil),      // 39: cfm.OCR2Config.Plugins
	nil,                             // 40: cfm.UpdateNodeResponse.ChainConfigErrorsEntry
	(*timestamppb.Timestamp)(nil),   // 41: google.protobuf.Timestamp
}
var file_orchestrator_feedsmanager_feedsmanager_proto_depIdxs = []int32{
	1,  // 0: cfm.Chain.type:type_name -> cfm.ChainType
	1,  // 1: cfm.Account.chain_type:type_name -> cfm.ChainType
	35, // 2: cfm.OCR1Config.p2p_key_bundle:type_name -> cfm.OCR1Config.P2PKeyBundle
	36, // 3: cfm.OCR1Config.ocr_key_bundle:type_name -> cfm.OCR1Config.OCRKeyBundle
	37, // 4: cfm.OCR2Config.p2p_key_bundle:type_name -> cfm.OCR2Config.P2PKeyBundle
	38, // 5: cfm.OCR2Config.ocr_key_bundle:type_name -> cfm.OCR2Config.OCRKeyBundle
	39, // 6: cfm.OCR2Config.plugins:type_name -> cfm.OCR2Config.Plugins
	4,  // 7: cfm.ChainConfig.chain:type_name -> cfm.Chain
	6,  // 8: cfm.ChainConfig.flux_monitor_config:type_name -> cfm.FluxMonitorConfig
	7,  // 9: cfm.ChainConfig.ocr1_config:type_name -> cfm.OCR1Config
	8,  // 10: cfm.ChainConfig.ocr2_config:type_name -> cfm.OCR2Config
	0,  // 11: cfm.UpdateNodeRequest.job_types:type_name -> cfm.JobType
	5,  // 12: cfm.UpdateNodeRequest.accounts:type_name -> cfm.Account
	4,  // 13: cfm.UpdateNodeRequest.chains:type_name -> cfm.Chain
	9,  // 14: cfm.UpdateNodeRequest.chain_configs:type_name -> cfm.ChainConfig
	29, // 15: cfm.UpdateNodeRequest.p2p_key_bundles:type_name -> cfm.P2PKeyBundle
	40, // 16: cfm.UpdateNodeResponse.chain_config_errors:type_name -> cfm.UpdateNodeResponse.ChainConfigErrorsEntry
	30, // 17: cfm.TransferJobRequest.labels:type_name -> cfm.Label
	30, // 18: cfm.Job.labels:type_name -> cfm.Label
	41, // 19: cfm.Job.created_at:type_name -> google.protobuf.Timestamp
	41, // 20: cfm.Job.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 21: cfm.Proposal.status:type_name -> cfm.ProposalStatus
	3,  // 22: cfm.Proposal.delivery_status:type_name -> cfm.ProposalDeliveryStatus
	41, // 23: cfm.Proposal.created_at:type_name -> google.protobuf.Timestamp
	41, // 24: cfm.Proposal.updated_at:type_name -> google.protobuf.Timestamp
	31, // 25: cfm.TransferedJobRequest.job:type_name -> cfm.Job
	32, // 26: cfm.TransferedJobRequest.proposals:type_name -> cfm.Proposal
	12, // 27: cfm.UpdateNodeResponse.ChainConfigErrorsEntry.value:type_name -> cfm.ChainConfigError
	13, // 28: cfm.FeedsManager.ApprovedJob:input_type -> cfm.ApprovedJobRequest
	15, // 29: cfm.FeedsManager.Healthcheck:input_type -> cfm.HealthcheckRequest
	10, // 30: cfm.FeedsManager.UpdateNode:input_type -> cfm.UpdateNodeRequest
	17, // 31: cfm.FeedsManager.RejectedJob:input_type -> cfm.RejectedJobRequest
	19, // 32: cfm.FeedsManager.CancelledJob:input_type -> cfm.CancelledJobRequest
	33, // 33: cfm.FeedsManager.TransferedJob:input_type -> cfm.TransferedJobRequest
	23, // 34: cfm.NodeService.ProposeJob:input_type -> cfm.ProposeJobRequest
	25, // 35: cfm.NodeService.DeleteJob:input_type -> cfm.DeleteJobRequest
	27, // 36: cfm.NodeService.RevokeJob:input_type -> cfm.RevokeJobRequest
	21, // 37: cfm.NodeService.TransferJob:input_type -> cfm.TransferJobRequest
	14, // 38: cfm.FeedsManager.ApprovedJob:output_type -> cfm.ApprovedJobResponse
	16, // 39: cfm.FeedsManager.Healthcheck:output_type -> cfm.HealthcheckResponse
	11, // 40: cfm.FeedsManager.UpdateNode:output_type -> cfm.UpdateNodeResponse
	18, // 41: cfm.FeedsManager.RejectedJob:output_type -> cfm.RejectedJobResponse
	20, // 42: cfm.FeedsManager.CancelledJob:output_type -> cfm.CancelledJobResponse
	34, // 43: cfm.FeedsManager.TransferedJob:output_type -> cfm.TransferedJobResponse
	24, // 44: cfm.NodeService.ProposeJob:output_type -> cfm.ProposeJobResponse
	26, // 45: cfm.NodeService.DeleteJob:output_type -> cfm.DeleteJobResponse
	28, // 46: cfm.NodeService.RevokeJob:output_type -> cfm.RevokeJobResponse
	22, // 47: cfm.NodeService.TransferJob:output_type -> cfm.TransferJobResponse
	38, // [38:48] is the sub-list for method output_type
	28, // [28:38] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_orchestrator_feedsmanager_feedsmanager_proto_init() }
func file_orchestrator_feedsmanager_feedsmanager_proto_init() {
	if File_orchestrator_feedsmanager_feedsmanager_proto != nil {
		return
	}
	file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[4].OneofWrappers = []any{}
	file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[5].OneofWrappers = []any{}
	file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[6].OneofWrappers = []any{}
	file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes[26].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_orchestrator_feedsmanager_feedsmanager_proto_rawDesc), len(file_orchestrator_feedsmanager_feedsmanager_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_orchestrator_feedsmanager_feedsmanager_proto_goTypes,
		DependencyIndexes: file_orchestrator_feedsmanager_feedsmanager_proto_depIdxs,
		EnumInfos:         file_orchestrator_feedsmanager_feedsmanager_proto_enumTypes,
		MessageInfos:      file_orchestrator_feedsmanager_feedsmanager_proto_msgTypes,
	}.Build()
	File_orchestrator_feedsmanager_feedsmanager_proto = out.File
	file_orchestrator_feedsmanager_feedsmanager_proto_goTypes = nil
	file_orchestrator_feedsmanager_feedsmanager_proto_depIdxs = nil
}
