syntax = "proto3";

package chainlink_ccv.v1;

import "google/rpc/status.proto";

option go_package = "github.com/smartcontractkit/chainlink-protos/chainlink-ccv/go/v1";

service Aggregator {
  rpc WriteCommitCCVNodeData(WriteCommitCCVNodeDataRequest) returns (WriteCommitCCVNodeDataResponse);
  rpc BatchWriteCommitCCVNodeData(BatchWriteCommitCCVNodeDataRequest) returns (BatchWriteCommitCCVNodeDataResponse);
  rpc ReadCommitCCVNodeData(ReadCommitCCVNodeDataRequest) returns (ReadCommitCCVNodeDataResponse);
  rpc WriteChainStatus(WriteChainStatusRequest) returns (WriteChainStatusResponse);
  rpc ReadChainStatus(ReadChainStatusRequest) returns (ReadChainStatusResponse);
}

service VerifierResultAPI {
  rpc GetVerifierResultForMessage(GetVerifierResultForMessageRequest) returns (VerifierResult);
  rpc GetMessagesSince(GetMessagesSinceRequest) returns (GetMessagesSinceResponse);
}

message ChainStatus {
  uint64 chain_selector = 1;
  uint64 finalized_block_height = 2;
  bool disabled = 3;
}

message WriteChainStatusRequest {
  repeated ChainStatus statuses = 1;
}

message WriteChainStatusResponse {
  WriteStatus status = 1;
}

message ReadChainStatusRequest {}

message ReadChainStatusResponse {
  repeated ChainStatus statuses = 1;
}

message Message {
  uint32 version = 1;
  uint64 source_chain_selector = 2;
  uint64 dest_chain_selector = 3;
  uint64 nonce = 4;
  uint32 on_ramp_address_length = 5;
  bytes on_ramp_address = 6;
  uint32 off_ramp_address_length = 7;
  bytes off_ramp_address = 8;
  uint32 finality = 9;
  uint32 sender_length = 10;
  bytes sender = 11;
  uint32 receiver_length = 12;
  bytes receiver = 13;
  uint32 dest_blob_length = 14;
  bytes dest_blob = 15;
  uint32 token_transfer_length = 16;
  bytes token_transfer = 17;
  uint32 data_length = 18;
  bytes data = 19;
}

message ReceiptBlob {
  bytes issuer = 1;
  uint64 dest_gas_limit = 2;
  uint32 dest_bytes_overhead = 3;
  bytes blob = 4;
  bytes extra_args = 5;
}

message MessageWithCCVNodeData {
  bytes message_id = 1;
  bytes source_verifier_address = 2;
  // ccv_data is the signature from the commit verifier node of the message data and the blob data
  bytes ccv_data = 3;
  // blob_data is the verifier's proof/verification of the message data on chain
  bytes blob_data = 4;
  int64 timestamp = 5;
  Message message = 6;
  repeated ReceiptBlob receipt_blobs = 7;
}

message VerifierResult {
  Message message = 1;
  bytes source_verifier_address = 2;
  bytes dest_verifier_address = 3;
  bytes ccv_data = 4;
  int64 timestamp = 5;
  int64 sequence = 6;
}

message MessageWithVerifierResult {
  Message message = 1;
  bytes source_verifier_address = 2;
  bytes dest_verifier_address = 3;
  bytes ccv_data = 4;
  int64 timestamp = 5;
  int64 sequence = 6;
  repeated ReceiptBlob receipt_blobs_from_majority = 7;
}

message BatchWriteCommitCCVNodeDataRequest {
  repeated WriteCommitCCVNodeDataRequest requests = 1;
}

message BatchWriteCommitCCVNodeDataResponse {
  repeated WriteCommitCCVNodeDataResponse responses = 1;
  repeated google.rpc.Status errors = 2;
}

message WriteCommitCCVNodeDataRequest {
  MessageWithCCVNodeData ccv_node_data = 1;
}

enum WriteStatus {
  SUCCESS = 0;
  FAILED = 1;
}

message WriteCommitCCVNodeDataResponse {
  WriteStatus status = 1;
}

message ReadCommitCCVNodeDataRequest {
  bytes message_id = 1;
  bytes address = 2;
}

message ReadCommitCCVNodeDataResponse {
  MessageWithCCVNodeData ccv_node_data = 1;
}

message GetVerifierResultForMessageRequest {
  bytes message_id = 1;
}

message GetMessagesSinceRequest {
    int64 sinceSequence = 1;
    string next_token = 2;
}

message GetMessagesSinceResponse {
    repeated MessageWithVerifierResult results = 1;
    string next_token = 2;
}